// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonGiftConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CommonGiftConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CommonGiftConfig {

namespace {

const ::google::protobuf::Descriptor* BaseItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaseItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropsItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropsItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommonModifyItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonModifyItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CommonGiftConfig_2eproto() {
  protobuf_AddDesc_CommonGiftConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CommonGiftConfig.proto");
  GOOGLE_CHECK(file != NULL);
  BaseItem_descriptor_ = file->message_type(0);
  static const int BaseItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseItem, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseItem, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseItem, exp_),
  };
  BaseItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaseItem_descriptor_,
      BaseItem::default_instance_,
      BaseItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaseItem));
  PropsItem_descriptor_ = file->message_type(1);
  static const int PropsItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropsItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropsItem, count_),
  };
  PropsItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropsItem_descriptor_,
      PropsItem::default_instance_,
      PropsItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropsItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropsItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropsItem));
  CommonModifyItem_descriptor_ = file->message_type(2);
  static const int CommonModifyItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonModifyItem, based_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonModifyItem, props_),
  };
  CommonModifyItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CommonModifyItem_descriptor_,
      CommonModifyItem::default_instance_,
      CommonModifyItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonModifyItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonModifyItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CommonModifyItem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CommonGiftConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaseItem_descriptor_, &BaseItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropsItem_descriptor_, &PropsItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CommonModifyItem_descriptor_, &CommonModifyItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CommonGiftConfig_2eproto() {
  delete BaseItem::default_instance_;
  delete BaseItem_reflection_;
  delete PropsItem::default_instance_;
  delete PropsItem_reflection_;
  delete CommonModifyItem::default_instance_;
  delete CommonModifyItem_reflection_;
}

void protobuf_AddDesc_CommonGiftConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026CommonGiftConfig.proto\022\020CommonGiftConf"
    "ig\"3\n\010BaseItem\022\014\n\004coin\030\001 \001(\005\022\014\n\004cash\030\002 \001"
    "(\005\022\013\n\003exp\030\003 \001(\005\"&\n\tPropsItem\022\n\n\002id\030\001 \002(\r"
    "\022\r\n\005count\030\002 \002(\005\"i\n\020CommonModifyItem\022)\n\005b"
    "ased\030\001 \001(\0132\032.CommonGiftConfig.BaseItem\022*"
    "\n\005props\030\002 \003(\0132\033.CommonGiftConfig.PropsIt"
    "em", 242);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CommonGiftConfig.proto", &protobuf_RegisterTypes);
  BaseItem::default_instance_ = new BaseItem();
  PropsItem::default_instance_ = new PropsItem();
  CommonModifyItem::default_instance_ = new CommonModifyItem();
  BaseItem::default_instance_->InitAsDefaultInstance();
  PropsItem::default_instance_->InitAsDefaultInstance();
  CommonModifyItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CommonGiftConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CommonGiftConfig_2eproto {
  StaticDescriptorInitializer_CommonGiftConfig_2eproto() {
    protobuf_AddDesc_CommonGiftConfig_2eproto();
  }
} static_descriptor_initializer_CommonGiftConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BaseItem::kCoinFieldNumber;
const int BaseItem::kCashFieldNumber;
const int BaseItem::kExpFieldNumber;
#endif  // !_MSC_VER

BaseItem::BaseItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonGiftConfig.BaseItem)
}

void BaseItem::InitAsDefaultInstance() {
}

BaseItem::BaseItem(const BaseItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommonGiftConfig.BaseItem)
}

void BaseItem::SharedCtor() {
  _cached_size_ = 0;
  coin_ = 0;
  cash_ = 0;
  exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaseItem::~BaseItem() {
  // @@protoc_insertion_point(destructor:CommonGiftConfig.BaseItem)
  SharedDtor();
}

void BaseItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaseItem_descriptor_;
}

const BaseItem& BaseItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CommonGiftConfig_2eproto();
  return *default_instance_;
}

BaseItem* BaseItem::default_instance_ = NULL;

BaseItem* BaseItem::New() const {
  return new BaseItem;
}

void BaseItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BaseItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(coin_, exp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonGiftConfig.BaseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 coin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cash;
        break;
      }

      // optional int32 cash = 2;
      case 2: {
        if (tag == 16) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_exp;
        break;
      }

      // optional int32 exp = 3;
      case 3: {
        if (tag == 24) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonGiftConfig.BaseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonGiftConfig.BaseItem)
  return false;
#undef DO_
}

void BaseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonGiftConfig.BaseItem)
  // optional int32 coin = 1;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->coin(), output);
  }

  // optional int32 cash = 2;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cash(), output);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommonGiftConfig.BaseItem)
}

::google::protobuf::uint8* BaseItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommonGiftConfig.BaseItem)
  // optional int32 coin = 1;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->coin(), target);
  }

  // optional int32 cash = 2;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cash(), target);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommonGiftConfig.BaseItem)
  return target;
}

int BaseItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 coin = 1;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // optional int32 cash = 2;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash());
    }

    // optional int32 exp = 3;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaseItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaseItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaseItem::MergeFrom(const BaseItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaseItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseItem::CopyFrom(const BaseItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseItem::IsInitialized() const {

  return true;
}

void BaseItem::Swap(BaseItem* other) {
  if (other != this) {
    std::swap(coin_, other->coin_);
    std::swap(cash_, other->cash_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaseItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaseItem_descriptor_;
  metadata.reflection = BaseItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PropsItem::kIdFieldNumber;
const int PropsItem::kCountFieldNumber;
#endif  // !_MSC_VER

PropsItem::PropsItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonGiftConfig.PropsItem)
}

void PropsItem::InitAsDefaultInstance() {
}

PropsItem::PropsItem(const PropsItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommonGiftConfig.PropsItem)
}

void PropsItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropsItem::~PropsItem() {
  // @@protoc_insertion_point(destructor:CommonGiftConfig.PropsItem)
  SharedDtor();
}

void PropsItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PropsItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropsItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropsItem_descriptor_;
}

const PropsItem& PropsItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CommonGiftConfig_2eproto();
  return *default_instance_;
}

PropsItem* PropsItem::default_instance_ = NULL;

PropsItem* PropsItem::New() const {
  return new PropsItem;
}

void PropsItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PropsItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropsItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonGiftConfig.PropsItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonGiftConfig.PropsItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonGiftConfig.PropsItem)
  return false;
#undef DO_
}

void PropsItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonGiftConfig.PropsItem)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommonGiftConfig.PropsItem)
}

::google::protobuf::uint8* PropsItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommonGiftConfig.PropsItem)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommonGiftConfig.PropsItem)
  return target;
}

int PropsItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropsItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropsItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropsItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropsItem::MergeFrom(const PropsItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropsItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropsItem::CopyFrom(const PropsItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropsItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PropsItem::Swap(PropsItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropsItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropsItem_descriptor_;
  metadata.reflection = PropsItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CommonModifyItem::kBasedFieldNumber;
const int CommonModifyItem::kPropsFieldNumber;
#endif  // !_MSC_VER

CommonModifyItem::CommonModifyItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonGiftConfig.CommonModifyItem)
}

void CommonModifyItem::InitAsDefaultInstance() {
  based_ = const_cast< ::CommonGiftConfig::BaseItem*>(&::CommonGiftConfig::BaseItem::default_instance());
}

CommonModifyItem::CommonModifyItem(const CommonModifyItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommonGiftConfig.CommonModifyItem)
}

void CommonModifyItem::SharedCtor() {
  _cached_size_ = 0;
  based_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommonModifyItem::~CommonModifyItem() {
  // @@protoc_insertion_point(destructor:CommonGiftConfig.CommonModifyItem)
  SharedDtor();
}

void CommonModifyItem::SharedDtor() {
  if (this != default_instance_) {
    delete based_;
  }
}

void CommonModifyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonModifyItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonModifyItem_descriptor_;
}

const CommonModifyItem& CommonModifyItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CommonGiftConfig_2eproto();
  return *default_instance_;
}

CommonModifyItem* CommonModifyItem::default_instance_ = NULL;

CommonModifyItem* CommonModifyItem::New() const {
  return new CommonModifyItem;
}

void CommonModifyItem::Clear() {
  if (has_based()) {
    if (based_ != NULL) based_->::CommonGiftConfig::BaseItem::Clear();
  }
  props_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CommonModifyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonGiftConfig.CommonModifyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CommonGiftConfig.BaseItem based = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_based()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_props;
        break;
      }

      // repeated .CommonGiftConfig.PropsItem props = 2;
      case 2: {
        if (tag == 18) {
         parse_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_props;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonGiftConfig.CommonModifyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonGiftConfig.CommonModifyItem)
  return false;
#undef DO_
}

void CommonModifyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonGiftConfig.CommonModifyItem)
  // optional .CommonGiftConfig.BaseItem based = 1;
  if (has_based()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->based(), output);
  }

  // repeated .CommonGiftConfig.PropsItem props = 2;
  for (int i = 0; i < this->props_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->props(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommonGiftConfig.CommonModifyItem)
}

::google::protobuf::uint8* CommonModifyItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommonGiftConfig.CommonModifyItem)
  // optional .CommonGiftConfig.BaseItem based = 1;
  if (has_based()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->based(), target);
  }

  // repeated .CommonGiftConfig.PropsItem props = 2;
  for (int i = 0; i < this->props_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->props(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommonGiftConfig.CommonModifyItem)
  return target;
}

int CommonModifyItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CommonGiftConfig.BaseItem based = 1;
    if (has_based()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->based());
    }

  }
  // repeated .CommonGiftConfig.PropsItem props = 2;
  total_size += 1 * this->props_size();
  for (int i = 0; i < this->props_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->props(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonModifyItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CommonModifyItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommonModifyItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommonModifyItem::MergeFrom(const CommonModifyItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  props_.MergeFrom(from.props_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_based()) {
      mutable_based()->::CommonGiftConfig::BaseItem::MergeFrom(from.based());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CommonModifyItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonModifyItem::CopyFrom(const CommonModifyItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonModifyItem::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->props())) return false;
  return true;
}

void CommonModifyItem::Swap(CommonModifyItem* other) {
  if (other != this) {
    std::swap(based_, other->based_);
    props_.Swap(&other->props_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CommonModifyItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonModifyItem_descriptor_;
  metadata.reflection = CommonModifyItem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CommonGiftConfig

// @@protoc_insertion_point(global_scope)
