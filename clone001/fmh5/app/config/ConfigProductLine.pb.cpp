// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigProductLine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConfigProductLine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ConfigProductLine {

namespace {

const ::google::protobuf::Descriptor* EquipLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnimalLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnimalLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* MaterailReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaterailReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProductLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProductLine_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConfigProductLine_2eproto() {
  protobuf_AddDesc_ConfigProductLine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConfigProductLine.proto");
  GOOGLE_CHECK(file != NULL);
  EquipLine_descriptor_ = file->message_type(0);
  static const int EquipLine_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, product_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, maxqueue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, queue_price_),
  };
  EquipLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipLine_descriptor_,
      EquipLine::default_instance_,
      EquipLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipLine));
  AnimalLine_descriptor_ = file->message_type(1);
  static const int AnimalLine_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalLine, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalLine, fodder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalLine, product_),
  };
  AnimalLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnimalLine_descriptor_,
      AnimalLine::default_instance_,
      AnimalLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimalLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnimalLine));
  MaterailReward_descriptor_ = file->message_type(2);
  static const int MaterailReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterailReward, init_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterailReward, rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterailReward, random_reward_),
  };
  MaterailReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MaterailReward_descriptor_,
      MaterailReward::default_instance_,
      MaterailReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterailReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterailReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MaterailReward));
  ProductLine_descriptor_ = file->message_type(3);
  static const int ProductLine_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductLine, equipline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductLine, animal_line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductLine, get_storage_material_),
  };
  ProductLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProductLine_descriptor_,
      ProductLine::default_instance_,
      ProductLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProductLine));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConfigProductLine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipLine_descriptor_, &EquipLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnimalLine_descriptor_, &AnimalLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MaterailReward_descriptor_, &MaterailReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProductLine_descriptor_, &ProductLine::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConfigProductLine_2eproto() {
  delete EquipLine::default_instance_;
  delete EquipLine_reflection_;
  delete AnimalLine::default_instance_;
  delete AnimalLine_reflection_;
  delete MaterailReward::default_instance_;
  delete MaterailReward_reflection_;
  delete ProductLine::default_instance_;
  delete ProductLine_reflection_;
}

void protobuf_AddDesc_ConfigProductLine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CommonGiftConfig::protobuf_AddDesc_CommonGiftConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ConfigProductLine.proto\022\021ConfigProduct"
    "Line\032\026CommonGiftConfig.proto\"\234\001\n\tEquipLi"
    "ne\022\n\n\002id\030\001 \002(\r\0228\n\014product_list\030\002 \003(\0132\".C"
    "ommonGiftConfig.CommonModifyItem\022\020\n\010maxq"
    "ueue\030\003 \002(\r\0227\n\013queue_price\030\004 \003(\0132\".Common"
    "GiftConfig.CommonModifyItem\"]\n\nAnimalLin"
    "e\022\n\n\002id\030\001 \002(\r\022\016\n\006fodder\030\002 \002(\r\0223\n\007product"
    "\030\003 \002(\0132\".CommonGiftConfig.CommonModifyIt"
    "em\"m\n\016MaterailReward\022\022\n\ninit_count\030\001 \002(\r"
    "\022\014\n\004rate\030\002 \002(\r\0229\n\rrandom_reward\030\003 \003(\0132\"."
    "CommonGiftConfig.CommonModifyItem\"\263\001\n\013Pr"
    "oductLine\022/\n\tequipline\030\001 \003(\0132\034.ConfigPro"
    "ductLine.EquipLine\0222\n\013animal_line\030\002 \003(\0132"
    "\035.ConfigProductLine.AnimalLine\022\?\n\024get_st"
    "orage_material\030\003 \002(\0132!.ConfigProductLine"
    ".MaterailReward", 615);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConfigProductLine.proto", &protobuf_RegisterTypes);
  EquipLine::default_instance_ = new EquipLine();
  AnimalLine::default_instance_ = new AnimalLine();
  MaterailReward::default_instance_ = new MaterailReward();
  ProductLine::default_instance_ = new ProductLine();
  EquipLine::default_instance_->InitAsDefaultInstance();
  AnimalLine::default_instance_->InitAsDefaultInstance();
  MaterailReward::default_instance_->InitAsDefaultInstance();
  ProductLine::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConfigProductLine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConfigProductLine_2eproto {
  StaticDescriptorInitializer_ConfigProductLine_2eproto() {
    protobuf_AddDesc_ConfigProductLine_2eproto();
  }
} static_descriptor_initializer_ConfigProductLine_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EquipLine::kIdFieldNumber;
const int EquipLine::kProductListFieldNumber;
const int EquipLine::kMaxqueueFieldNumber;
const int EquipLine::kQueuePriceFieldNumber;
#endif  // !_MSC_VER

EquipLine::EquipLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigProductLine.EquipLine)
}

void EquipLine::InitAsDefaultInstance() {
}

EquipLine::EquipLine(const EquipLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigProductLine.EquipLine)
}

void EquipLine::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  maxqueue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipLine::~EquipLine() {
  // @@protoc_insertion_point(destructor:ConfigProductLine.EquipLine)
  SharedDtor();
}

void EquipLine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipLine_descriptor_;
}

const EquipLine& EquipLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigProductLine_2eproto();
  return *default_instance_;
}

EquipLine* EquipLine::default_instance_ = NULL;

EquipLine* EquipLine::New() const {
  return new EquipLine;
}

void EquipLine::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EquipLine*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, maxqueue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  product_list_.Clear();
  queue_price_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigProductLine.EquipLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_product_list;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem product_list = 2;
      case 2: {
        if (tag == 18) {
         parse_product_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_product_list;
        if (input->ExpectTag(24)) goto parse_maxqueue;
        break;
      }

      // required uint32 maxqueue = 3;
      case 3: {
        if (tag == 24) {
         parse_maxqueue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxqueue_)));
          set_has_maxqueue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_queue_price;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem queue_price = 4;
      case 4: {
        if (tag == 34) {
         parse_queue_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_queue_price()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_queue_price;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigProductLine.EquipLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigProductLine.EquipLine)
  return false;
#undef DO_
}

void EquipLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigProductLine.EquipLine)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->product_list(i), output);
  }

  // required uint32 maxqueue = 3;
  if (has_maxqueue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxqueue(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem queue_price = 4;
  for (int i = 0; i < this->queue_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->queue_price(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigProductLine.EquipLine)
}

::google::protobuf::uint8* EquipLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigProductLine.EquipLine)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->product_list(i), target);
  }

  // required uint32 maxqueue = 3;
  if (has_maxqueue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxqueue(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem queue_price = 4;
  for (int i = 0; i < this->queue_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->queue_price(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigProductLine.EquipLine)
  return target;
}

int EquipLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 maxqueue = 3;
    if (has_maxqueue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxqueue());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem product_list = 2;
  total_size += 1 * this->product_list_size();
  for (int i = 0; i < this->product_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product_list(i));
  }

  // repeated .CommonGiftConfig.CommonModifyItem queue_price = 4;
  total_size += 1 * this->queue_price_size();
  for (int i = 0; i < this->queue_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->queue_price(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipLine::MergeFrom(const EquipLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_list_.MergeFrom(from.product_list_);
  queue_price_.MergeFrom(from.queue_price_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_maxqueue()) {
      set_maxqueue(from.maxqueue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipLine::CopyFrom(const EquipLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->product_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->queue_price())) return false;
  return true;
}

void EquipLine::Swap(EquipLine* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    product_list_.Swap(&other->product_list_);
    std::swap(maxqueue_, other->maxqueue_);
    queue_price_.Swap(&other->queue_price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipLine_descriptor_;
  metadata.reflection = EquipLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnimalLine::kIdFieldNumber;
const int AnimalLine::kFodderFieldNumber;
const int AnimalLine::kProductFieldNumber;
#endif  // !_MSC_VER

AnimalLine::AnimalLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigProductLine.AnimalLine)
}

void AnimalLine::InitAsDefaultInstance() {
  product_ = const_cast< ::CommonGiftConfig::CommonModifyItem*>(&::CommonGiftConfig::CommonModifyItem::default_instance());
}

AnimalLine::AnimalLine(const AnimalLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigProductLine.AnimalLine)
}

void AnimalLine::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  fodder_ = 0u;
  product_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnimalLine::~AnimalLine() {
  // @@protoc_insertion_point(destructor:ConfigProductLine.AnimalLine)
  SharedDtor();
}

void AnimalLine::SharedDtor() {
  if (this != default_instance_) {
    delete product_;
  }
}

void AnimalLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnimalLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnimalLine_descriptor_;
}

const AnimalLine& AnimalLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigProductLine_2eproto();
  return *default_instance_;
}

AnimalLine* AnimalLine::default_instance_ = NULL;

AnimalLine* AnimalLine::New() const {
  return new AnimalLine;
}

void AnimalLine::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AnimalLine*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, fodder_);
    if (has_product()) {
      if (product_ != NULL) product_->::CommonGiftConfig::CommonModifyItem::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnimalLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigProductLine.AnimalLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fodder;
        break;
      }

      // required uint32 fodder = 2;
      case 2: {
        if (tag == 16) {
         parse_fodder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fodder_)));
          set_has_fodder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_product;
        break;
      }

      // required .CommonGiftConfig.CommonModifyItem product = 3;
      case 3: {
        if (tag == 26) {
         parse_product:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigProductLine.AnimalLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigProductLine.AnimalLine)
  return false;
#undef DO_
}

void AnimalLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigProductLine.AnimalLine)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 fodder = 2;
  if (has_fodder()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fodder(), output);
  }

  // required .CommonGiftConfig.CommonModifyItem product = 3;
  if (has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigProductLine.AnimalLine)
}

::google::protobuf::uint8* AnimalLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigProductLine.AnimalLine)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 fodder = 2;
  if (has_fodder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fodder(), target);
  }

  // required .CommonGiftConfig.CommonModifyItem product = 3;
  if (has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->product(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigProductLine.AnimalLine)
  return target;
}

int AnimalLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 fodder = 2;
    if (has_fodder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fodder());
    }

    // required .CommonGiftConfig.CommonModifyItem product = 3;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnimalLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnimalLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnimalLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnimalLine::MergeFrom(const AnimalLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_fodder()) {
      set_fodder(from.fodder());
    }
    if (from.has_product()) {
      mutable_product()->::CommonGiftConfig::CommonModifyItem::MergeFrom(from.product());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnimalLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimalLine::CopyFrom(const AnimalLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimalLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_product()) {
    if (!this->product().IsInitialized()) return false;
  }
  return true;
}

void AnimalLine::Swap(AnimalLine* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(fodder_, other->fodder_);
    std::swap(product_, other->product_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnimalLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnimalLine_descriptor_;
  metadata.reflection = AnimalLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MaterailReward::kInitCountFieldNumber;
const int MaterailReward::kRateFieldNumber;
const int MaterailReward::kRandomRewardFieldNumber;
#endif  // !_MSC_VER

MaterailReward::MaterailReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigProductLine.MaterailReward)
}

void MaterailReward::InitAsDefaultInstance() {
}

MaterailReward::MaterailReward(const MaterailReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigProductLine.MaterailReward)
}

void MaterailReward::SharedCtor() {
  _cached_size_ = 0;
  init_count_ = 0u;
  rate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MaterailReward::~MaterailReward() {
  // @@protoc_insertion_point(destructor:ConfigProductLine.MaterailReward)
  SharedDtor();
}

void MaterailReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MaterailReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaterailReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaterailReward_descriptor_;
}

const MaterailReward& MaterailReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigProductLine_2eproto();
  return *default_instance_;
}

MaterailReward* MaterailReward::default_instance_ = NULL;

MaterailReward* MaterailReward::New() const {
  return new MaterailReward;
}

void MaterailReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MaterailReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(init_count_, rate_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  random_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MaterailReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigProductLine.MaterailReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 init_count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &init_count_)));
          set_has_init_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rate;
        break;
      }

      // required uint32 rate = 2;
      case 2: {
        if (tag == 16) {
         parse_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rate_)));
          set_has_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_random_reward;
        break;
      }

      // repeated .CommonGiftConfig.CommonModifyItem random_reward = 3;
      case 3: {
        if (tag == 26) {
         parse_random_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_random_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_random_reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigProductLine.MaterailReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigProductLine.MaterailReward)
  return false;
#undef DO_
}

void MaterailReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigProductLine.MaterailReward)
  // required uint32 init_count = 1;
  if (has_init_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->init_count(), output);
  }

  // required uint32 rate = 2;
  if (has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rate(), output);
  }

  // repeated .CommonGiftConfig.CommonModifyItem random_reward = 3;
  for (int i = 0; i < this->random_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->random_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigProductLine.MaterailReward)
}

::google::protobuf::uint8* MaterailReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigProductLine.MaterailReward)
  // required uint32 init_count = 1;
  if (has_init_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->init_count(), target);
  }

  // required uint32 rate = 2;
  if (has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rate(), target);
  }

  // repeated .CommonGiftConfig.CommonModifyItem random_reward = 3;
  for (int i = 0; i < this->random_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->random_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigProductLine.MaterailReward)
  return target;
}

int MaterailReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 init_count = 1;
    if (has_init_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->init_count());
    }

    // required uint32 rate = 2;
    if (has_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rate());
    }

  }
  // repeated .CommonGiftConfig.CommonModifyItem random_reward = 3;
  total_size += 1 * this->random_reward_size();
  for (int i = 0; i < this->random_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->random_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaterailReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MaterailReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MaterailReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MaterailReward::MergeFrom(const MaterailReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  random_reward_.MergeFrom(from.random_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_init_count()) {
      set_init_count(from.init_count());
    }
    if (from.has_rate()) {
      set_rate(from.rate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MaterailReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterailReward::CopyFrom(const MaterailReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterailReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->random_reward())) return false;
  return true;
}

void MaterailReward::Swap(MaterailReward* other) {
  if (other != this) {
    std::swap(init_count_, other->init_count_);
    std::swap(rate_, other->rate_);
    random_reward_.Swap(&other->random_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MaterailReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaterailReward_descriptor_;
  metadata.reflection = MaterailReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProductLine::kEquiplineFieldNumber;
const int ProductLine::kAnimalLineFieldNumber;
const int ProductLine::kGetStorageMaterialFieldNumber;
#endif  // !_MSC_VER

ProductLine::ProductLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigProductLine.ProductLine)
}

void ProductLine::InitAsDefaultInstance() {
  get_storage_material_ = const_cast< ::ConfigProductLine::MaterailReward*>(&::ConfigProductLine::MaterailReward::default_instance());
}

ProductLine::ProductLine(const ProductLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigProductLine.ProductLine)
}

void ProductLine::SharedCtor() {
  _cached_size_ = 0;
  get_storage_material_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProductLine::~ProductLine() {
  // @@protoc_insertion_point(destructor:ConfigProductLine.ProductLine)
  SharedDtor();
}

void ProductLine::SharedDtor() {
  if (this != default_instance_) {
    delete get_storage_material_;
  }
}

void ProductLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProductLine_descriptor_;
}

const ProductLine& ProductLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConfigProductLine_2eproto();
  return *default_instance_;
}

ProductLine* ProductLine::default_instance_ = NULL;

ProductLine* ProductLine::New() const {
  return new ProductLine;
}

void ProductLine::Clear() {
  if (has_get_storage_material()) {
    if (get_storage_material_ != NULL) get_storage_material_->::ConfigProductLine::MaterailReward::Clear();
  }
  equipline_.Clear();
  animal_line_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProductLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigProductLine.ProductLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConfigProductLine.EquipLine equipline = 1;
      case 1: {
        if (tag == 10) {
         parse_equipline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_equipline;
        if (input->ExpectTag(18)) goto parse_animal_line;
        break;
      }

      // repeated .ConfigProductLine.AnimalLine animal_line = 2;
      case 2: {
        if (tag == 18) {
         parse_animal_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_animal_line()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_animal_line;
        if (input->ExpectTag(26)) goto parse_get_storage_material;
        break;
      }

      // required .ConfigProductLine.MaterailReward get_storage_material = 3;
      case 3: {
        if (tag == 26) {
         parse_get_storage_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_storage_material()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigProductLine.ProductLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigProductLine.ProductLine)
  return false;
#undef DO_
}

void ProductLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigProductLine.ProductLine)
  // repeated .ConfigProductLine.EquipLine equipline = 1;
  for (int i = 0; i < this->equipline_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equipline(i), output);
  }

  // repeated .ConfigProductLine.AnimalLine animal_line = 2;
  for (int i = 0; i < this->animal_line_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->animal_line(i), output);
  }

  // required .ConfigProductLine.MaterailReward get_storage_material = 3;
  if (has_get_storage_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->get_storage_material(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigProductLine.ProductLine)
}

::google::protobuf::uint8* ProductLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigProductLine.ProductLine)
  // repeated .ConfigProductLine.EquipLine equipline = 1;
  for (int i = 0; i < this->equipline_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equipline(i), target);
  }

  // repeated .ConfigProductLine.AnimalLine animal_line = 2;
  for (int i = 0; i < this->animal_line_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->animal_line(i), target);
  }

  // required .ConfigProductLine.MaterailReward get_storage_material = 3;
  if (has_get_storage_material()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->get_storage_material(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigProductLine.ProductLine)
  return target;
}

int ProductLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // required .ConfigProductLine.MaterailReward get_storage_material = 3;
    if (has_get_storage_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->get_storage_material());
    }

  }
  // repeated .ConfigProductLine.EquipLine equipline = 1;
  total_size += 1 * this->equipline_size();
  for (int i = 0; i < this->equipline_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipline(i));
  }

  // repeated .ConfigProductLine.AnimalLine animal_line = 2;
  total_size += 1 * this->animal_line_size();
  for (int i = 0; i < this->animal_line_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->animal_line(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProductLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProductLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProductLine::MergeFrom(const ProductLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipline_.MergeFrom(from.equipline_);
  animal_line_.MergeFrom(from.animal_line_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_get_storage_material()) {
      mutable_get_storage_material()->::ConfigProductLine::MaterailReward::MergeFrom(from.get_storage_material());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProductLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductLine::CopyFrom(const ProductLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->equipline())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->animal_line())) return false;
  if (has_get_storage_material()) {
    if (!this->get_storage_material().IsInitialized()) return false;
  }
  return true;
}

void ProductLine::Swap(ProductLine* other) {
  if (other != this) {
    equipline_.Swap(&other->equipline_);
    animal_line_.Swap(&other->animal_line_);
    std::swap(get_storage_material_, other->get_storage_material_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProductLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProductLine_descriptor_;
  metadata.reflection = ProductLine_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigProductLine

// @@protoc_insertion_point(global_scope)
