// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigItem.proto

#ifndef PROTOBUF_ConfigItem_2eproto__INCLUDED
#define PROTOBUF_ConfigItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonGiftConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace ConfigItem {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigItem_2eproto();
void protobuf_AssignDesc_ConfigItem_2eproto();
void protobuf_ShutdownFile_ConfigItem_2eproto();

class PropItem;
class Items;

// ===================================================================

class PropItem : public ::google::protobuf::Message {
 public:
  PropItem();
  virtual ~PropItem();

  PropItem(const PropItem& from);

  inline PropItem& operator=(const PropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropItem& default_instance();

  void Swap(PropItem* other);

  // implements Message ----------------------------------------------

  PropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropItem& from);
  void MergeFrom(const PropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // required uint32 unlock_level = 3;
  inline bool has_unlock_level() const;
  inline void clear_unlock_level();
  static const int kUnlockLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 unlock_level() const;
  inline void set_unlock_level(::google::protobuf::uint32 value);

  // required uint32 time_gain = 4;
  inline bool has_time_gain() const;
  inline void clear_time_gain();
  static const int kTimeGainFieldNumber = 4;
  inline ::google::protobuf::uint32 time_gain() const;
  inline void set_time_gain(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem price = 5;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline const ::CommonGiftConfig::CommonModifyItem& price() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_price();
  inline ::CommonGiftConfig::CommonModifyItem* release_price();
  inline void set_allocated_price(::CommonGiftConfig::CommonModifyItem* price);

  // required uint32 limitnum = 6;
  inline bool has_limitnum() const;
  inline void clear_limitnum();
  static const int kLimitnumFieldNumber = 6;
  inline ::google::protobuf::uint32 limitnum() const;
  inline void set_limitnum(::google::protobuf::uint32 value);

  // required .CommonGiftConfig.CommonModifyItem dimond_cost = 7;
  inline bool has_dimond_cost() const;
  inline void clear_dimond_cost();
  static const int kDimondCostFieldNumber = 7;
  inline const ::CommonGiftConfig::CommonModifyItem& dimond_cost() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_dimond_cost();
  inline ::CommonGiftConfig::CommonModifyItem* release_dimond_cost();
  inline void set_allocated_dimond_cost(::CommonGiftConfig::CommonModifyItem* dimond_cost);

  // optional .CommonGiftConfig.CommonModifyItem material = 8;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 8;
  inline const ::CommonGiftConfig::CommonModifyItem& material() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_material();
  inline ::CommonGiftConfig::CommonModifyItem* release_material();
  inline void set_allocated_material(::CommonGiftConfig::CommonModifyItem* material);

  // optional uint32 speed_price = 9;
  inline bool has_speed_price() const;
  inline void clear_speed_price();
  static const int kSpeedPriceFieldNumber = 9;
  inline ::google::protobuf::uint32 speed_price() const;
  inline void set_speed_price(::google::protobuf::uint32 value);

  // optional .CommonGiftConfig.CommonModifyItem extra_reward = 10;
  inline bool has_extra_reward() const;
  inline void clear_extra_reward();
  static const int kExtraRewardFieldNumber = 10;
  inline const ::CommonGiftConfig::CommonModifyItem& extra_reward() const;
  inline ::CommonGiftConfig::CommonModifyItem* mutable_extra_reward();
  inline ::CommonGiftConfig::CommonModifyItem* release_extra_reward();
  inline void set_allocated_extra_reward(::CommonGiftConfig::CommonModifyItem* extra_reward);

  // @@protoc_insertion_point(class_scope:ConfigItem.PropItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_unlock_level();
  inline void clear_has_unlock_level();
  inline void set_has_time_gain();
  inline void clear_has_time_gain();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_limitnum();
  inline void clear_has_limitnum();
  inline void set_has_dimond_cost();
  inline void clear_has_dimond_cost();
  inline void set_has_material();
  inline void clear_has_material();
  inline void set_has_speed_price();
  inline void clear_has_speed_price();
  inline void set_has_extra_reward();
  inline void clear_has_extra_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 unlock_level_;
  ::google::protobuf::uint32 time_gain_;
  ::CommonGiftConfig::CommonModifyItem* price_;
  ::CommonGiftConfig::CommonModifyItem* dimond_cost_;
  ::google::protobuf::uint32 limitnum_;
  ::google::protobuf::uint32 speed_price_;
  ::CommonGiftConfig::CommonModifyItem* material_;
  ::CommonGiftConfig::CommonModifyItem* extra_reward_;
  friend void  protobuf_AddDesc_ConfigItem_2eproto();
  friend void protobuf_AssignDesc_ConfigItem_2eproto();
  friend void protobuf_ShutdownFile_ConfigItem_2eproto();

  void InitAsDefaultInstance();
  static PropItem* default_instance_;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  Items* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ConfigItem.PropItem itemes = 1;
  inline int itemes_size() const;
  inline void clear_itemes();
  static const int kItemesFieldNumber = 1;
  inline const ::ConfigItem::PropItem& itemes(int index) const;
  inline ::ConfigItem::PropItem* mutable_itemes(int index);
  inline ::ConfigItem::PropItem* add_itemes();
  inline const ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >&
      itemes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >*
      mutable_itemes();

  // @@protoc_insertion_point(class_scope:ConfigItem.Items)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem > itemes_;
  friend void  protobuf_AddDesc_ConfigItem_2eproto();
  friend void protobuf_AssignDesc_ConfigItem_2eproto();
  friend void protobuf_ShutdownFile_ConfigItem_2eproto();

  void InitAsDefaultInstance();
  static Items* default_instance_;
};
// ===================================================================


// ===================================================================

// PropItem

// required uint32 id = 1;
inline bool PropItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PropItem::id() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.id)
  return id_;
}
inline void PropItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.id)
}

// required uint32 location = 2;
inline bool PropItem::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropItem::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropItem::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropItem::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 PropItem::location() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.location)
  return location_;
}
inline void PropItem::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.location)
}

// required uint32 unlock_level = 3;
inline bool PropItem::has_unlock_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PropItem::set_has_unlock_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PropItem::clear_has_unlock_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PropItem::clear_unlock_level() {
  unlock_level_ = 0u;
  clear_has_unlock_level();
}
inline ::google::protobuf::uint32 PropItem::unlock_level() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.unlock_level)
  return unlock_level_;
}
inline void PropItem::set_unlock_level(::google::protobuf::uint32 value) {
  set_has_unlock_level();
  unlock_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.unlock_level)
}

// required uint32 time_gain = 4;
inline bool PropItem::has_time_gain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PropItem::set_has_time_gain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PropItem::clear_has_time_gain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PropItem::clear_time_gain() {
  time_gain_ = 0u;
  clear_has_time_gain();
}
inline ::google::protobuf::uint32 PropItem::time_gain() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.time_gain)
  return time_gain_;
}
inline void PropItem::set_time_gain(::google::protobuf::uint32 value) {
  set_has_time_gain();
  time_gain_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.time_gain)
}

// required .CommonGiftConfig.CommonModifyItem price = 5;
inline bool PropItem::has_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PropItem::set_has_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PropItem::clear_has_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PropItem::clear_price() {
  if (price_ != NULL) price_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_price();
}
inline const ::CommonGiftConfig::CommonModifyItem& PropItem::price() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.price)
  return price_ != NULL ? *price_ : *default_instance_->price_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::mutable_price() {
  set_has_price();
  if (price_ == NULL) price_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigItem.PropItem.price)
  return price_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::release_price() {
  clear_has_price();
  ::CommonGiftConfig::CommonModifyItem* temp = price_;
  price_ = NULL;
  return temp;
}
inline void PropItem::set_allocated_price(::CommonGiftConfig::CommonModifyItem* price) {
  delete price_;
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigItem.PropItem.price)
}

// required uint32 limitnum = 6;
inline bool PropItem::has_limitnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PropItem::set_has_limitnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PropItem::clear_has_limitnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PropItem::clear_limitnum() {
  limitnum_ = 0u;
  clear_has_limitnum();
}
inline ::google::protobuf::uint32 PropItem::limitnum() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.limitnum)
  return limitnum_;
}
inline void PropItem::set_limitnum(::google::protobuf::uint32 value) {
  set_has_limitnum();
  limitnum_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.limitnum)
}

// required .CommonGiftConfig.CommonModifyItem dimond_cost = 7;
inline bool PropItem::has_dimond_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PropItem::set_has_dimond_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PropItem::clear_has_dimond_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PropItem::clear_dimond_cost() {
  if (dimond_cost_ != NULL) dimond_cost_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_dimond_cost();
}
inline const ::CommonGiftConfig::CommonModifyItem& PropItem::dimond_cost() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.dimond_cost)
  return dimond_cost_ != NULL ? *dimond_cost_ : *default_instance_->dimond_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::mutable_dimond_cost() {
  set_has_dimond_cost();
  if (dimond_cost_ == NULL) dimond_cost_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigItem.PropItem.dimond_cost)
  return dimond_cost_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::release_dimond_cost() {
  clear_has_dimond_cost();
  ::CommonGiftConfig::CommonModifyItem* temp = dimond_cost_;
  dimond_cost_ = NULL;
  return temp;
}
inline void PropItem::set_allocated_dimond_cost(::CommonGiftConfig::CommonModifyItem* dimond_cost) {
  delete dimond_cost_;
  dimond_cost_ = dimond_cost;
  if (dimond_cost) {
    set_has_dimond_cost();
  } else {
    clear_has_dimond_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigItem.PropItem.dimond_cost)
}

// optional .CommonGiftConfig.CommonModifyItem material = 8;
inline bool PropItem::has_material() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PropItem::set_has_material() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PropItem::clear_has_material() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PropItem::clear_material() {
  if (material_ != NULL) material_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_material();
}
inline const ::CommonGiftConfig::CommonModifyItem& PropItem::material() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.material)
  return material_ != NULL ? *material_ : *default_instance_->material_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::mutable_material() {
  set_has_material();
  if (material_ == NULL) material_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigItem.PropItem.material)
  return material_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::release_material() {
  clear_has_material();
  ::CommonGiftConfig::CommonModifyItem* temp = material_;
  material_ = NULL;
  return temp;
}
inline void PropItem::set_allocated_material(::CommonGiftConfig::CommonModifyItem* material) {
  delete material_;
  material_ = material;
  if (material) {
    set_has_material();
  } else {
    clear_has_material();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigItem.PropItem.material)
}

// optional uint32 speed_price = 9;
inline bool PropItem::has_speed_price() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PropItem::set_has_speed_price() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PropItem::clear_has_speed_price() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PropItem::clear_speed_price() {
  speed_price_ = 0u;
  clear_has_speed_price();
}
inline ::google::protobuf::uint32 PropItem::speed_price() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.speed_price)
  return speed_price_;
}
inline void PropItem::set_speed_price(::google::protobuf::uint32 value) {
  set_has_speed_price();
  speed_price_ = value;
  // @@protoc_insertion_point(field_set:ConfigItem.PropItem.speed_price)
}

// optional .CommonGiftConfig.CommonModifyItem extra_reward = 10;
inline bool PropItem::has_extra_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PropItem::set_has_extra_reward() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PropItem::clear_has_extra_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PropItem::clear_extra_reward() {
  if (extra_reward_ != NULL) extra_reward_->::CommonGiftConfig::CommonModifyItem::Clear();
  clear_has_extra_reward();
}
inline const ::CommonGiftConfig::CommonModifyItem& PropItem::extra_reward() const {
  // @@protoc_insertion_point(field_get:ConfigItem.PropItem.extra_reward)
  return extra_reward_ != NULL ? *extra_reward_ : *default_instance_->extra_reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::mutable_extra_reward() {
  set_has_extra_reward();
  if (extra_reward_ == NULL) extra_reward_ = new ::CommonGiftConfig::CommonModifyItem;
  // @@protoc_insertion_point(field_mutable:ConfigItem.PropItem.extra_reward)
  return extra_reward_;
}
inline ::CommonGiftConfig::CommonModifyItem* PropItem::release_extra_reward() {
  clear_has_extra_reward();
  ::CommonGiftConfig::CommonModifyItem* temp = extra_reward_;
  extra_reward_ = NULL;
  return temp;
}
inline void PropItem::set_allocated_extra_reward(::CommonGiftConfig::CommonModifyItem* extra_reward) {
  delete extra_reward_;
  extra_reward_ = extra_reward;
  if (extra_reward) {
    set_has_extra_reward();
  } else {
    clear_has_extra_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:ConfigItem.PropItem.extra_reward)
}

// -------------------------------------------------------------------

// Items

// repeated .ConfigItem.PropItem itemes = 1;
inline int Items::itemes_size() const {
  return itemes_.size();
}
inline void Items::clear_itemes() {
  itemes_.Clear();
}
inline const ::ConfigItem::PropItem& Items::itemes(int index) const {
  // @@protoc_insertion_point(field_get:ConfigItem.Items.itemes)
  return itemes_.Get(index);
}
inline ::ConfigItem::PropItem* Items::mutable_itemes(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigItem.Items.itemes)
  return itemes_.Mutable(index);
}
inline ::ConfigItem::PropItem* Items::add_itemes() {
  // @@protoc_insertion_point(field_add:ConfigItem.Items.itemes)
  return itemes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >&
Items::itemes() const {
  // @@protoc_insertion_point(field_list:ConfigItem.Items.itemes)
  return itemes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConfigItem::PropItem >*
Items::mutable_itemes() {
  // @@protoc_insertion_point(field_mutable_list:ConfigItem.Items.itemes)
  return &itemes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigItem

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigItem_2eproto__INCLUDED
