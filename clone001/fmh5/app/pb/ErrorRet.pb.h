// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorRet.proto

#ifndef PROTOBUF_ErrorRet_2eproto__INCLUDED
#define PROTOBUF_ErrorRet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ErrorRet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ErrorRet_2eproto();
void protobuf_AssignDesc_ErrorRet_2eproto();
void protobuf_ShutdownFile_ErrorRet_2eproto();

class ErrorRet;

// ===================================================================

class ErrorRet : public ::google::protobuf::Message {
 public:
  ErrorRet();
  virtual ~ErrorRet();

  ErrorRet(const ErrorRet& from);

  inline ErrorRet& operator=(const ErrorRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorRet& default_instance();

  void Swap(ErrorRet* other);

  // implements Message ----------------------------------------------

  ErrorRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorRet& from);
  void MergeFrom(const ErrorRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_ret = 1;
  inline bool has_error_ret() const;
  inline void clear_error_ret();
  static const int kErrorRetFieldNumber = 1;
  inline ::google::protobuf::uint32 error_ret() const;
  inline void set_error_ret(::google::protobuf::uint32 value);

  // required string error_msg = 2;
  inline bool has_error_msg() const;
  inline void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  inline const ::std::string& error_msg() const;
  inline void set_error_msg(const ::std::string& value);
  inline void set_error_msg(const char* value);
  inline void set_error_msg(const char* value, size_t size);
  inline ::std::string* mutable_error_msg();
  inline ::std::string* release_error_msg();
  inline void set_allocated_error_msg(::std::string* error_msg);

  // required string request_msg = 3;
  inline bool has_request_msg() const;
  inline void clear_request_msg();
  static const int kRequestMsgFieldNumber = 3;
  inline const ::std::string& request_msg() const;
  inline void set_request_msg(const ::std::string& value);
  inline void set_request_msg(const char* value);
  inline void set_request_msg(const char* value, size_t size);
  inline ::std::string* mutable_request_msg();
  inline ::std::string* release_request_msg();
  inline void set_allocated_request_msg(::std::string* request_msg);

  // @@protoc_insertion_point(class_scope:ErrorRet.ErrorRet)
 private:
  inline void set_has_error_ret();
  inline void clear_has_error_ret();
  inline void set_has_error_msg();
  inline void clear_has_error_msg();
  inline void set_has_request_msg();
  inline void clear_has_request_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_msg_;
  ::std::string* request_msg_;
  ::google::protobuf::uint32 error_ret_;
  friend void  protobuf_AddDesc_ErrorRet_2eproto();
  friend void protobuf_AssignDesc_ErrorRet_2eproto();
  friend void protobuf_ShutdownFile_ErrorRet_2eproto();

  void InitAsDefaultInstance();
  static ErrorRet* default_instance_;
};
// ===================================================================


// ===================================================================

// ErrorRet

// required uint32 error_ret = 1;
inline bool ErrorRet::has_error_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorRet::set_has_error_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorRet::clear_has_error_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorRet::clear_error_ret() {
  error_ret_ = 0u;
  clear_has_error_ret();
}
inline ::google::protobuf::uint32 ErrorRet::error_ret() const {
  // @@protoc_insertion_point(field_get:ErrorRet.ErrorRet.error_ret)
  return error_ret_;
}
inline void ErrorRet::set_error_ret(::google::protobuf::uint32 value) {
  set_has_error_ret();
  error_ret_ = value;
  // @@protoc_insertion_point(field_set:ErrorRet.ErrorRet.error_ret)
}

// required string error_msg = 2;
inline bool ErrorRet::has_error_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorRet::set_has_error_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorRet::clear_has_error_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorRet::clear_error_msg() {
  if (error_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_msg_->clear();
  }
  clear_has_error_msg();
}
inline const ::std::string& ErrorRet::error_msg() const {
  // @@protoc_insertion_point(field_get:ErrorRet.ErrorRet.error_msg)
  return *error_msg_;
}
inline void ErrorRet::set_error_msg(const ::std::string& value) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(value);
  // @@protoc_insertion_point(field_set:ErrorRet.ErrorRet.error_msg)
}
inline void ErrorRet::set_error_msg(const char* value) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:ErrorRet.ErrorRet.error_msg)
}
inline void ErrorRet::set_error_msg(const char* value, size_t size) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ErrorRet.ErrorRet.error_msg)
}
inline ::std::string* ErrorRet::mutable_error_msg() {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ErrorRet.ErrorRet.error_msg)
  return error_msg_;
}
inline ::std::string* ErrorRet::release_error_msg() {
  clear_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_msg_;
    error_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ErrorRet::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_msg_;
  }
  if (error_msg) {
    set_has_error_msg();
    error_msg_ = error_msg;
  } else {
    clear_has_error_msg();
    error_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ErrorRet.ErrorRet.error_msg)
}

// required string request_msg = 3;
inline bool ErrorRet::has_request_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrorRet::set_has_request_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrorRet::clear_has_request_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrorRet::clear_request_msg() {
  if (request_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_msg_->clear();
  }
  clear_has_request_msg();
}
inline const ::std::string& ErrorRet::request_msg() const {
  // @@protoc_insertion_point(field_get:ErrorRet.ErrorRet.request_msg)
  return *request_msg_;
}
inline void ErrorRet::set_request_msg(const ::std::string& value) {
  set_has_request_msg();
  if (request_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_msg_ = new ::std::string;
  }
  request_msg_->assign(value);
  // @@protoc_insertion_point(field_set:ErrorRet.ErrorRet.request_msg)
}
inline void ErrorRet::set_request_msg(const char* value) {
  set_has_request_msg();
  if (request_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_msg_ = new ::std::string;
  }
  request_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:ErrorRet.ErrorRet.request_msg)
}
inline void ErrorRet::set_request_msg(const char* value, size_t size) {
  set_has_request_msg();
  if (request_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_msg_ = new ::std::string;
  }
  request_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ErrorRet.ErrorRet.request_msg)
}
inline ::std::string* ErrorRet::mutable_request_msg() {
  set_has_request_msg();
  if (request_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ErrorRet.ErrorRet.request_msg)
  return request_msg_;
}
inline ::std::string* ErrorRet::release_request_msg() {
  clear_has_request_msg();
  if (request_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = request_msg_;
    request_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ErrorRet::set_allocated_request_msg(::std::string* request_msg) {
  if (request_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete request_msg_;
  }
  if (request_msg) {
    set_has_request_msg();
    request_msg_ = request_msg;
  } else {
    clear_has_request_msg();
    request_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ErrorRet.ErrorRet.request_msg)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ErrorRet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ErrorRet_2eproto__INCLUDED
