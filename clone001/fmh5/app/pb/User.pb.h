// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#ifndef PROTOBUF_User_2eproto__INCLUDED
#define PROTOBUF_User_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoNotify.pb.h"
#include "ProtoActivity.pb.h"
#include "ProtoBuilding.pb.h"
#include "ProtoProduce.pb.h"
#include "DataCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace User {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_User_2eproto();
void protobuf_AssignDesc_User_2eproto();
void protobuf_ShutdownFile_User_2eproto();

class Base;
class ActivityItem;
class Activity;
class User;
class RequestOtherUser;
class OtherUser;
class Tutorial_stage;
class ServerTime;
class CostCashReq;
class CostCashResp;
class ChargeItem;
class AccumulateCharge;
class PushAccumulateChangeReq;
class SpeedUpReq;
class SpeedUpResp;
class BuyMaterialInfo;
class BuyMaterialReq;
class BuyMaterialResp;

// ===================================================================

class Base : public ::google::protobuf::Message {
 public:
  Base();
  virtual ~Base();

  Base(const Base& from);

  inline Base& operator=(const Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Base& default_instance();

  void Swap(Base* other);

  // implements Message ----------------------------------------------

  Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Base& from);
  void MergeFrom(const Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 registerPlatform = 2;
  inline bool has_registerplatform() const;
  inline void clear_registerplatform();
  static const int kRegisterPlatformFieldNumber = 2;
  inline ::google::protobuf::uint32 registerplatform() const;
  inline void set_registerplatform(::google::protobuf::uint32 value);

  // required uint32 registerTime = 3;
  inline bool has_registertime() const;
  inline void clear_registertime();
  static const int kRegisterTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 registertime() const;
  inline void set_registertime(::google::protobuf::uint32 value);

  // required uint32 lastLoginPlatform = 4;
  inline bool has_lastloginplatform() const;
  inline void clear_lastloginplatform();
  static const int kLastLoginPlatformFieldNumber = 4;
  inline ::google::protobuf::uint32 lastloginplatform() const;
  inline void set_lastloginplatform(::google::protobuf::uint32 value);

  // required uint32 lastLoginTime = 5;
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::uint32 value);

  // required uint32 loginTimes = 6;
  inline bool has_logintimes() const;
  inline void clear_logintimes();
  static const int kLoginTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 logintimes() const;
  inline void set_logintimes(::google::protobuf::uint32 value);

  // required uint32 loginDays = 7;
  inline bool has_logindays() const;
  inline void clear_logindays();
  static const int kLoginDaysFieldNumber = 7;
  inline ::google::protobuf::uint32 logindays() const;
  inline void set_logindays(::google::protobuf::uint32 value);

  // required uint32 lastActiveTime = 8;
  inline bool has_lastactivetime() const;
  inline void clear_lastactivetime();
  static const int kLastActiveTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lastactivetime() const;
  inline void set_lastactivetime(::google::protobuf::uint32 value);

  // required uint32 lastOffTime = 9;
  inline bool has_lastofftime() const;
  inline void clear_lastofftime();
  static const int kLastOffTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 lastofftime() const;
  inline void set_lastofftime(::google::protobuf::uint32 value);

  // required uint32 forbidTs = 10;
  inline bool has_forbidts() const;
  inline void clear_forbidts();
  static const int kForbidTsFieldNumber = 10;
  inline ::google::protobuf::uint32 forbidts() const;
  inline void set_forbidts(::google::protobuf::uint32 value);

  // required bytes forbidReason = 11;
  inline bool has_forbidreason() const;
  inline void clear_forbidreason();
  static const int kForbidReasonFieldNumber = 11;
  inline const ::std::string& forbidreason() const;
  inline void set_forbidreason(const ::std::string& value);
  inline void set_forbidreason(const char* value);
  inline void set_forbidreason(const void* value, size_t size);
  inline ::std::string* mutable_forbidreason();
  inline ::std::string* release_forbidreason();
  inline void set_allocated_forbidreason(::std::string* forbidreason);

  // required uint32 tutorialStage = 12;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 12;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);

  // required bytes name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes fig = 14;
  inline bool has_fig() const;
  inline void clear_fig();
  static const int kFigFieldNumber = 14;
  inline const ::std::string& fig() const;
  inline void set_fig(const ::std::string& value);
  inline void set_fig(const char* value);
  inline void set_fig(const void* value, size_t size);
  inline ::std::string* mutable_fig();
  inline ::std::string* release_fig();
  inline void set_allocated_fig(::std::string* fig);

  // required uint64 exp = 15;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 15;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // required uint32 level = 16;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 16;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 acccharge = 17;
  inline bool has_acccharge() const;
  inline void clear_acccharge();
  static const int kAccchargeFieldNumber = 17;
  inline ::google::protobuf::uint32 acccharge() const;
  inline void set_acccharge(::google::protobuf::uint32 value);

  // required uint32 viplevel = 18;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 18;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 cash = 19;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 19;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 coin = 20;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 20;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 firstRecharge = 21;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 21;
  inline ::google::protobuf::uint32 firstrecharge() const;
  inline void set_firstrecharge(::google::protobuf::uint32 value);

  // required uint32 allianceId = 22;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceIdFieldNumber = 22;
  inline ::google::protobuf::uint32 allianceid() const;
  inline void set_allianceid(::google::protobuf::uint32 value);

  // required bytes barrier = 23;
  inline bool has_barrier() const;
  inline void clear_barrier();
  static const int kBarrierFieldNumber = 23;
  inline const ::std::string& barrier() const;
  inline void set_barrier(const ::std::string& value);
  inline void set_barrier(const char* value);
  inline void set_barrier(const void* value, size_t size);
  inline ::std::string* mutable_barrier();
  inline ::std::string* release_barrier();
  inline void set_allocated_barrier(::std::string* barrier);

  // @@protoc_insertion_point(class_scope:User.Base)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_registerplatform();
  inline void clear_has_registerplatform();
  inline void set_has_registertime();
  inline void clear_has_registertime();
  inline void set_has_lastloginplatform();
  inline void clear_has_lastloginplatform();
  inline void set_has_lastlogintime();
  inline void clear_has_lastlogintime();
  inline void set_has_logintimes();
  inline void clear_has_logintimes();
  inline void set_has_logindays();
  inline void clear_has_logindays();
  inline void set_has_lastactivetime();
  inline void clear_has_lastactivetime();
  inline void set_has_lastofftime();
  inline void clear_has_lastofftime();
  inline void set_has_forbidts();
  inline void clear_has_forbidts();
  inline void set_has_forbidreason();
  inline void clear_has_forbidreason();
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fig();
  inline void clear_has_fig();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_acccharge();
  inline void clear_has_acccharge();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_barrier();
  inline void clear_has_barrier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 registerplatform_;
  ::google::protobuf::uint32 registertime_;
  ::google::protobuf::uint32 lastloginplatform_;
  ::google::protobuf::uint32 lastlogintime_;
  ::google::protobuf::uint32 logintimes_;
  ::google::protobuf::uint32 logindays_;
  ::google::protobuf::uint32 lastactivetime_;
  ::google::protobuf::uint32 lastofftime_;
  ::google::protobuf::uint32 forbidts_;
  ::std::string* forbidreason_;
  ::std::string* name_;
  ::std::string* fig_;
  ::google::protobuf::uint32 tutorialstage_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 acccharge_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 firstrecharge_;
  ::google::protobuf::uint32 allianceid_;
  ::std::string* barrier_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Base* default_instance_;
};
// -------------------------------------------------------------------

class ActivityItem : public ::google::protobuf::Message {
 public:
  ActivityItem();
  virtual ~ActivityItem();

  ActivityItem(const ActivityItem& from);

  inline ActivityItem& operator=(const ActivityItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityItem& default_instance();

  void Swap(ActivityItem* other);

  // implements Message ----------------------------------------------

  ActivityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityItem& from);
  void MergeFrom(const ActivityItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 bts = 2;
  inline bool has_bts() const;
  inline void clear_bts();
  static const int kBtsFieldNumber = 2;
  inline ::google::protobuf::uint32 bts() const;
  inline void set_bts(::google::protobuf::uint32 value);

  // required uint32 ets = 3;
  inline bool has_ets() const;
  inline void clear_ets();
  static const int kEtsFieldNumber = 3;
  inline ::google::protobuf::uint32 ets() const;
  inline void set_ets(::google::protobuf::uint32 value);

  // required uint32 ver = 4;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 4;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ActivityItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bts();
  inline void clear_has_bts();
  inline void set_has_ets();
  inline void clear_has_ets();
  inline void set_has_ver();
  inline void clear_has_ver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 bts_;
  ::google::protobuf::uint32 ets_;
  ::google::protobuf::uint32 ver_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ActivityItem* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.ActivityItem act = 1;
  inline int act_size() const;
  inline void clear_act();
  static const int kActFieldNumber = 1;
  inline const ::User::ActivityItem& act(int index) const;
  inline ::User::ActivityItem* mutable_act(int index);
  inline ::User::ActivityItem* add_act();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
      act() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
      mutable_act();

  // @@protoc_insertion_point(class_scope:User.Activity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::ActivityItem > act_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  inline void set_allocated_base(::User::Base* base);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // required .User.Activity activity = 3;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 3;
  inline const ::User::Activity& activity() const;
  inline ::User::Activity* mutable_activity();
  inline ::User::Activity* release_activity();
  inline void set_allocated_activity(::User::Activity* activity);

  // optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
  inline bool has_notifies() const;
  inline void clear_notifies();
  static const int kNotifiesFieldNumber = 4;
  inline const ::ProtoNotify::NotifyItemCPPAll& notifies() const;
  inline ::ProtoNotify::NotifyItemCPPAll* mutable_notifies();
  inline ::ProtoNotify::NotifyItemCPPAll* release_notifies();
  inline void set_allocated_notifies(::ProtoNotify::NotifyItemCPPAll* notifies);

  // required .User.AccumulateCharge charges = 5;
  inline bool has_charges() const;
  inline void clear_charges();
  static const int kChargesFieldNumber = 5;
  inline const ::User::AccumulateCharge& charges() const;
  inline ::User::AccumulateCharge* mutable_charges();
  inline ::User::AccumulateCharge* release_charges();
  inline void set_allocated_charges(::User::AccumulateCharge* charges);

  // required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
  inline bool has_gameactivity() const;
  inline void clear_gameactivity();
  static const int kGameactivityFieldNumber = 6;
  inline const ::ProtoActivity::GameAcitivityAllCPP& gameactivity() const;
  inline ::ProtoActivity::GameAcitivityAllCPP* mutable_gameactivity();
  inline ::ProtoActivity::GameAcitivityAllCPP* release_gameactivity();
  inline void set_allocated_gameactivity(::ProtoActivity::GameAcitivityAllCPP* gameactivity);

  // repeated .DataCommon.PropsItemCPP item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline const ::DataCommon::PropsItemCPP& item(int index) const;
  inline ::DataCommon::PropsItemCPP* mutable_item(int index);
  inline ::DataCommon::PropsItemCPP* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
      mutable_item();

  // repeated .ProtoBuilding.BuildingCPP builds = 8;
  inline int builds_size() const;
  inline void clear_builds();
  static const int kBuildsFieldNumber = 8;
  inline const ::ProtoBuilding::BuildingCPP& builds(int index) const;
  inline ::ProtoBuilding::BuildingCPP* mutable_builds(int index);
  inline ::ProtoBuilding::BuildingCPP* add_builds();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
      builds() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
      mutable_builds();

  // repeated .ProtoProduce.CropLandCPP cropland = 9;
  inline int cropland_size() const;
  inline void clear_cropland();
  static const int kCroplandFieldNumber = 9;
  inline const ::ProtoProduce::CropLandCPP& cropland(int index) const;
  inline ::ProtoProduce::CropLandCPP* mutable_cropland(int index);
  inline ::ProtoProduce::CropLandCPP* add_cropland();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
      cropland() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
      mutable_cropland();

  // repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
  inline int equipments_size() const;
  inline void clear_equipments();
  static const int kEquipmentsFieldNumber = 10;
  inline const ::ProtoProduce::ProduceEquipCPP& equipments(int index) const;
  inline ::ProtoProduce::ProduceEquipCPP* mutable_equipments(int index);
  inline ::ProtoProduce::ProduceEquipCPP* add_equipments();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >&
      equipments() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >*
      mutable_equipments();

  // repeated .ProtoProduce.AnimalCPP animals = 11;
  inline int animals_size() const;
  inline void clear_animals();
  static const int kAnimalsFieldNumber = 11;
  inline const ::ProtoProduce::AnimalCPP& animals(int index) const;
  inline ::ProtoProduce::AnimalCPP* mutable_animals(int index);
  inline ::ProtoProduce::AnimalCPP* add_animals();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
      animals() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
      mutable_animals();

  // repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
  inline int equipmentstars_size() const;
  inline void clear_equipmentstars();
  static const int kEquipmentstarsFieldNumber = 12;
  inline const ::ProtoBuilding::EquipmentStarCPP& equipmentstars(int index) const;
  inline ::ProtoBuilding::EquipmentStarCPP* mutable_equipmentstars(int index);
  inline ::ProtoBuilding::EquipmentStarCPP* add_equipmentstars();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
      equipmentstars() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
      mutable_equipmentstars();

  // @@protoc_insertion_point(class_scope:User.User)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_notifies();
  inline void clear_has_notifies();
  inline void set_has_charges();
  inline void clear_has_charges();
  inline void set_has_gameactivity();
  inline void clear_has_gameactivity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::Base* base_;
  ::User::Activity* activity_;
  ::ProtoNotify::NotifyItemCPPAll* notifies_;
  ::User::AccumulateCharge* charges_;
  ::ProtoActivity::GameAcitivityAllCPP* gameactivity_;
  ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP > item_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP > builds_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP > cropland_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP > equipments_;
  ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP > animals_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP > equipmentstars_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// -------------------------------------------------------------------

class RequestOtherUser : public ::google::protobuf::Message {
 public:
  RequestOtherUser();
  virtual ~RequestOtherUser();

  RequestOtherUser(const RequestOtherUser& from);

  inline RequestOtherUser& operator=(const RequestOtherUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOtherUser& default_instance();

  void Swap(RequestOtherUser* other);

  // implements Message ----------------------------------------------

  RequestOtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOtherUser& from);
  void MergeFrom(const RequestOtherUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.RequestOtherUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static RequestOtherUser* default_instance_;
};
// -------------------------------------------------------------------

class OtherUser : public ::google::protobuf::Message {
 public:
  OtherUser();
  virtual ~OtherUser();

  OtherUser(const OtherUser& from);

  inline OtherUser& operator=(const OtherUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherUser& default_instance();

  void Swap(OtherUser* other);

  // implements Message ----------------------------------------------

  OtherUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherUser& from);
  void MergeFrom(const OtherUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::User::Base& base() const;
  inline ::User::Base* mutable_base();
  inline ::User::Base* release_base();
  inline void set_allocated_base(::User::Base* base);

  // @@protoc_insertion_point(class_scope:User.OtherUser)
 private:
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::Base* base_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static OtherUser* default_instance_;
};
// -------------------------------------------------------------------

class Tutorial_stage : public ::google::protobuf::Message {
 public:
  Tutorial_stage();
  virtual ~Tutorial_stage();

  Tutorial_stage(const Tutorial_stage& from);

  inline Tutorial_stage& operator=(const Tutorial_stage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tutorial_stage& default_instance();

  void Swap(Tutorial_stage* other);

  // implements Message ----------------------------------------------

  Tutorial_stage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tutorial_stage& from);
  void MergeFrom(const Tutorial_stage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tutorialStage = 1;
  inline bool has_tutorialstage() const;
  inline void clear_tutorialstage();
  static const int kTutorialStageFieldNumber = 1;
  inline ::google::protobuf::uint32 tutorialstage() const;
  inline void set_tutorialstage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.Tutorial_stage)
 private:
  inline void set_has_tutorialstage();
  inline void clear_has_tutorialstage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tutorialstage_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static Tutorial_stage* default_instance_;
};
// -------------------------------------------------------------------

class ServerTime : public ::google::protobuf::Message {
 public:
  ServerTime();
  virtual ~ServerTime();

  ServerTime(const ServerTime& from);

  inline ServerTime& operator=(const ServerTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTime& default_instance();

  void Swap(ServerTime* other);

  // implements Message ----------------------------------------------

  ServerTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTime& from);
  void MergeFrom(const ServerTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ts = 1;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ServerTime)
 private:
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ServerTime* default_instance_;
};
// -------------------------------------------------------------------

class CostCashReq : public ::google::protobuf::Message {
 public:
  CostCashReq();
  virtual ~CostCashReq();

  CostCashReq(const CostCashReq& from);

  inline CostCashReq& operator=(const CostCashReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashReq& default_instance();

  void Swap(CostCashReq* other);

  // implements Message ----------------------------------------------

  CostCashReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashReq& from);
  void MergeFrom(const CostCashReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required string opCode = 2;
  inline bool has_opcode() const;
  inline void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  inline const ::std::string& opcode() const;
  inline void set_opcode(const ::std::string& value);
  inline void set_opcode(const char* value);
  inline void set_opcode(const char* value, size_t size);
  inline ::std::string* mutable_opcode();
  inline ::std::string* release_opcode();
  inline void set_allocated_opcode(::std::string* opcode);

  // required uint32 operation = 3;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 3;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CostCashReq)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_operation();
  inline void clear_has_operation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* opcode_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CostCashReq* default_instance_;
};
// -------------------------------------------------------------------

class CostCashResp : public ::google::protobuf::Message {
 public:
  CostCashResp();
  virtual ~CostCashResp();

  CostCashResp(const CostCashResp& from);

  inline CostCashResp& operator=(const CostCashResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CostCashResp& default_instance();

  void Swap(CostCashResp* other);

  // implements Message ----------------------------------------------

  CostCashResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CostCashResp& from);
  void MergeFrom(const CostCashResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 operation = 2;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 2;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.CostCashResp)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_operation();
  inline void clear_has_operation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 operation_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static CostCashResp* default_instance_;
};
// -------------------------------------------------------------------

class ChargeItem : public ::google::protobuf::Message {
 public:
  ChargeItem();
  virtual ~ChargeItem();

  ChargeItem(const ChargeItem& from);

  inline ChargeItem& operator=(const ChargeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeItem& default_instance();

  void Swap(ChargeItem* other);

  // implements Message ----------------------------------------------

  ChargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeItem& from);
  void MergeFrom(const ChargeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 ts = 2;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 2;
  inline ::google::protobuf::uint32 ts() const;
  inline void set_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.ChargeItem)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 ts_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static ChargeItem* default_instance_;
};
// -------------------------------------------------------------------

class AccumulateCharge : public ::google::protobuf::Message {
 public:
  AccumulateCharge();
  virtual ~AccumulateCharge();

  AccumulateCharge(const AccumulateCharge& from);

  inline AccumulateCharge& operator=(const AccumulateCharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulateCharge& default_instance();

  void Swap(AccumulateCharge* other);

  // implements Message ----------------------------------------------

  AccumulateCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccumulateCharge& from);
  void MergeFrom(const AccumulateCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.ChargeItem accumulateCharge = 1;
  inline int accumulatecharge_size() const;
  inline void clear_accumulatecharge();
  static const int kAccumulateChargeFieldNumber = 1;
  inline const ::User::ChargeItem& accumulatecharge(int index) const;
  inline ::User::ChargeItem* mutable_accumulatecharge(int index);
  inline ::User::ChargeItem* add_accumulatecharge();
  inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
      accumulatecharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
      mutable_accumulatecharge();

  // @@protoc_insertion_point(class_scope:User.AccumulateCharge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::ChargeItem > accumulatecharge_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static AccumulateCharge* default_instance_;
};
// -------------------------------------------------------------------

class PushAccumulateChangeReq : public ::google::protobuf::Message {
 public:
  PushAccumulateChangeReq();
  virtual ~PushAccumulateChangeReq();

  PushAccumulateChangeReq(const PushAccumulateChangeReq& from);

  inline PushAccumulateChangeReq& operator=(const PushAccumulateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushAccumulateChangeReq& default_instance();

  void Swap(PushAccumulateChangeReq* other);

  // implements Message ----------------------------------------------

  PushAccumulateChangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushAccumulateChangeReq& from);
  void MergeFrom(const PushAccumulateChangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .User.AccumulateCharge changeAcccharge = 1;
  inline bool has_changeacccharge() const;
  inline void clear_changeacccharge();
  static const int kChangeAccchargeFieldNumber = 1;
  inline const ::User::AccumulateCharge& changeacccharge() const;
  inline ::User::AccumulateCharge* mutable_changeacccharge();
  inline ::User::AccumulateCharge* release_changeacccharge();
  inline void set_allocated_changeacccharge(::User::AccumulateCharge* changeacccharge);

  // @@protoc_insertion_point(class_scope:User.PushAccumulateChangeReq)
 private:
  inline void set_has_changeacccharge();
  inline void clear_has_changeacccharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::User::AccumulateCharge* changeacccharge_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static PushAccumulateChangeReq* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpReq : public ::google::protobuf::Message {
 public:
  SpeedUpReq();
  virtual ~SpeedUpReq();

  SpeedUpReq(const SpeedUpReq& from);

  inline SpeedUpReq& operator=(const SpeedUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpReq& default_instance();

  void Swap(SpeedUpReq* other);

  // implements Message ----------------------------------------------

  SpeedUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpReq& from);
  void MergeFrom(const SpeedUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ud = 1;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 1;
  inline ::google::protobuf::uint32 ud() const;
  inline void set_ud(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.SpeedUpReq)
 private:
  inline void set_has_ud();
  inline void clear_has_ud();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ud_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SpeedUpReq* default_instance_;
};
// -------------------------------------------------------------------

class SpeedUpResp : public ::google::protobuf::Message {
 public:
  SpeedUpResp();
  virtual ~SpeedUpResp();

  SpeedUpResp(const SpeedUpResp& from);

  inline SpeedUpResp& operator=(const SpeedUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpeedUpResp& default_instance();

  void Swap(SpeedUpResp* other);

  // implements Message ----------------------------------------------

  SpeedUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpeedUpResp& from);
  void MergeFrom(const SpeedUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.SpeedUpResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static SpeedUpResp* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialInfo : public ::google::protobuf::Message {
 public:
  BuyMaterialInfo();
  virtual ~BuyMaterialInfo();

  BuyMaterialInfo(const BuyMaterialInfo& from);

  inline BuyMaterialInfo& operator=(const BuyMaterialInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialInfo& default_instance();

  void Swap(BuyMaterialInfo* other);

  // implements Message ----------------------------------------------

  BuyMaterialInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialInfo& from);
  void MergeFrom(const BuyMaterialInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 props_id = 1;
  inline bool has_props_id() const;
  inline void clear_props_id();
  static const int kPropsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 props_id() const;
  inline void set_props_id(::google::protobuf::uint32 value);

  // required uint32 props_cnt = 2;
  inline bool has_props_cnt() const;
  inline void clear_props_cnt();
  static const int kPropsCntFieldNumber = 2;
  inline ::google::protobuf::uint32 props_cnt() const;
  inline void set_props_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.BuyMaterialInfo)
 private:
  inline void set_has_props_id();
  inline void clear_has_props_id();
  inline void set_has_props_cnt();
  inline void clear_has_props_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 props_id_;
  ::google::protobuf::uint32 props_cnt_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialReq : public ::google::protobuf::Message {
 public:
  BuyMaterialReq();
  virtual ~BuyMaterialReq();

  BuyMaterialReq(const BuyMaterialReq& from);

  inline BuyMaterialReq& operator=(const BuyMaterialReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialReq& default_instance();

  void Swap(BuyMaterialReq* other);

  // implements Message ----------------------------------------------

  BuyMaterialReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialReq& from);
  void MergeFrom(const BuyMaterialReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .User.BuyMaterialInfo buy_info = 1;
  inline int buy_info_size() const;
  inline void clear_buy_info();
  static const int kBuyInfoFieldNumber = 1;
  inline const ::User::BuyMaterialInfo& buy_info(int index) const;
  inline ::User::BuyMaterialInfo* mutable_buy_info(int index);
  inline ::User::BuyMaterialInfo* add_buy_info();
  inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
      buy_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
      mutable_buy_info();

  // @@protoc_insertion_point(class_scope:User.BuyMaterialReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo > buy_info_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyMaterialResp : public ::google::protobuf::Message {
 public:
  BuyMaterialResp();
  virtual ~BuyMaterialResp();

  BuyMaterialResp(const BuyMaterialResp& from);

  inline BuyMaterialResp& operator=(const BuyMaterialResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyMaterialResp& default_instance();

  void Swap(BuyMaterialResp* other);

  // implements Message ----------------------------------------------

  BuyMaterialResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyMaterialResp& from);
  void MergeFrom(const BuyMaterialResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DataCommon.CommonItemsCPP commons = 1;
  inline bool has_commons() const;
  inline void clear_commons();
  static const int kCommonsFieldNumber = 1;
  inline const ::DataCommon::CommonItemsCPP& commons() const;
  inline ::DataCommon::CommonItemsCPP* mutable_commons();
  inline ::DataCommon::CommonItemsCPP* release_commons();
  inline void set_allocated_commons(::DataCommon::CommonItemsCPP* commons);

  // @@protoc_insertion_point(class_scope:User.BuyMaterialResp)
 private:
  inline void set_has_commons();
  inline void clear_has_commons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DataCommon::CommonItemsCPP* commons_;
  friend void  protobuf_AddDesc_User_2eproto();
  friend void protobuf_AssignDesc_User_2eproto();
  friend void protobuf_ShutdownFile_User_2eproto();

  void InitAsDefaultInstance();
  static BuyMaterialResp* default_instance_;
};
// ===================================================================


// ===================================================================

// Base

// required uint32 uid = 1;
inline bool Base::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Base::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Base::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Base::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Base::uid() const {
  // @@protoc_insertion_point(field_get:User.Base.uid)
  return uid_;
}
inline void Base::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.Base.uid)
}

// required uint32 registerPlatform = 2;
inline bool Base::has_registerplatform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Base::set_has_registerplatform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Base::clear_has_registerplatform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Base::clear_registerplatform() {
  registerplatform_ = 0u;
  clear_has_registerplatform();
}
inline ::google::protobuf::uint32 Base::registerplatform() const {
  // @@protoc_insertion_point(field_get:User.Base.registerPlatform)
  return registerplatform_;
}
inline void Base::set_registerplatform(::google::protobuf::uint32 value) {
  set_has_registerplatform();
  registerplatform_ = value;
  // @@protoc_insertion_point(field_set:User.Base.registerPlatform)
}

// required uint32 registerTime = 3;
inline bool Base::has_registertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Base::set_has_registertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Base::clear_has_registertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Base::clear_registertime() {
  registertime_ = 0u;
  clear_has_registertime();
}
inline ::google::protobuf::uint32 Base::registertime() const {
  // @@protoc_insertion_point(field_get:User.Base.registerTime)
  return registertime_;
}
inline void Base::set_registertime(::google::protobuf::uint32 value) {
  set_has_registertime();
  registertime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.registerTime)
}

// required uint32 lastLoginPlatform = 4;
inline bool Base::has_lastloginplatform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Base::set_has_lastloginplatform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Base::clear_has_lastloginplatform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Base::clear_lastloginplatform() {
  lastloginplatform_ = 0u;
  clear_has_lastloginplatform();
}
inline ::google::protobuf::uint32 Base::lastloginplatform() const {
  // @@protoc_insertion_point(field_get:User.Base.lastLoginPlatform)
  return lastloginplatform_;
}
inline void Base::set_lastloginplatform(::google::protobuf::uint32 value) {
  set_has_lastloginplatform();
  lastloginplatform_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastLoginPlatform)
}

// required uint32 lastLoginTime = 5;
inline bool Base::has_lastlogintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Base::set_has_lastlogintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Base::clear_has_lastlogintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Base::clear_lastlogintime() {
  lastlogintime_ = 0u;
  clear_has_lastlogintime();
}
inline ::google::protobuf::uint32 Base::lastlogintime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastLoginTime)
  return lastlogintime_;
}
inline void Base::set_lastlogintime(::google::protobuf::uint32 value) {
  set_has_lastlogintime();
  lastlogintime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastLoginTime)
}

// required uint32 loginTimes = 6;
inline bool Base::has_logintimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Base::set_has_logintimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Base::clear_has_logintimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Base::clear_logintimes() {
  logintimes_ = 0u;
  clear_has_logintimes();
}
inline ::google::protobuf::uint32 Base::logintimes() const {
  // @@protoc_insertion_point(field_get:User.Base.loginTimes)
  return logintimes_;
}
inline void Base::set_logintimes(::google::protobuf::uint32 value) {
  set_has_logintimes();
  logintimes_ = value;
  // @@protoc_insertion_point(field_set:User.Base.loginTimes)
}

// required uint32 loginDays = 7;
inline bool Base::has_logindays() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Base::set_has_logindays() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Base::clear_has_logindays() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Base::clear_logindays() {
  logindays_ = 0u;
  clear_has_logindays();
}
inline ::google::protobuf::uint32 Base::logindays() const {
  // @@protoc_insertion_point(field_get:User.Base.loginDays)
  return logindays_;
}
inline void Base::set_logindays(::google::protobuf::uint32 value) {
  set_has_logindays();
  logindays_ = value;
  // @@protoc_insertion_point(field_set:User.Base.loginDays)
}

// required uint32 lastActiveTime = 8;
inline bool Base::has_lastactivetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Base::set_has_lastactivetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Base::clear_has_lastactivetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Base::clear_lastactivetime() {
  lastactivetime_ = 0u;
  clear_has_lastactivetime();
}
inline ::google::protobuf::uint32 Base::lastactivetime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastActiveTime)
  return lastactivetime_;
}
inline void Base::set_lastactivetime(::google::protobuf::uint32 value) {
  set_has_lastactivetime();
  lastactivetime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastActiveTime)
}

// required uint32 lastOffTime = 9;
inline bool Base::has_lastofftime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Base::set_has_lastofftime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Base::clear_has_lastofftime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Base::clear_lastofftime() {
  lastofftime_ = 0u;
  clear_has_lastofftime();
}
inline ::google::protobuf::uint32 Base::lastofftime() const {
  // @@protoc_insertion_point(field_get:User.Base.lastOffTime)
  return lastofftime_;
}
inline void Base::set_lastofftime(::google::protobuf::uint32 value) {
  set_has_lastofftime();
  lastofftime_ = value;
  // @@protoc_insertion_point(field_set:User.Base.lastOffTime)
}

// required uint32 forbidTs = 10;
inline bool Base::has_forbidts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Base::set_has_forbidts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Base::clear_has_forbidts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Base::clear_forbidts() {
  forbidts_ = 0u;
  clear_has_forbidts();
}
inline ::google::protobuf::uint32 Base::forbidts() const {
  // @@protoc_insertion_point(field_get:User.Base.forbidTs)
  return forbidts_;
}
inline void Base::set_forbidts(::google::protobuf::uint32 value) {
  set_has_forbidts();
  forbidts_ = value;
  // @@protoc_insertion_point(field_set:User.Base.forbidTs)
}

// required bytes forbidReason = 11;
inline bool Base::has_forbidreason() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Base::set_has_forbidreason() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Base::clear_has_forbidreason() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Base::clear_forbidreason() {
  if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_->clear();
  }
  clear_has_forbidreason();
}
inline const ::std::string& Base::forbidreason() const {
  // @@protoc_insertion_point(field_get:User.Base.forbidReason)
  return *forbidreason_;
}
inline void Base::set_forbidreason(const ::std::string& value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.forbidReason)
}
inline void Base::set_forbidreason(const char* value) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.forbidReason)
}
inline void Base::set_forbidreason(const void* value, size_t size) {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  forbidreason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.forbidReason)
}
inline ::std::string* Base::mutable_forbidreason() {
  set_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    forbidreason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.forbidReason)
  return forbidreason_;
}
inline ::std::string* Base::release_forbidreason() {
  clear_has_forbidreason();
  if (forbidreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = forbidreason_;
    forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_forbidreason(::std::string* forbidreason) {
  if (forbidreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forbidreason_;
  }
  if (forbidreason) {
    set_has_forbidreason();
    forbidreason_ = forbidreason;
  } else {
    clear_has_forbidreason();
    forbidreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.forbidReason)
}

// required uint32 tutorialStage = 12;
inline bool Base::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Base::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Base::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Base::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Base::tutorialstage() const {
  // @@protoc_insertion_point(field_get:User.Base.tutorialStage)
  return tutorialstage_;
}
inline void Base::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
  // @@protoc_insertion_point(field_set:User.Base.tutorialStage)
}

// required bytes name = 13;
inline bool Base::has_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Base::set_has_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Base::clear_has_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Base::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Base::name() const {
  // @@protoc_insertion_point(field_get:User.Base.name)
  return *name_;
}
inline void Base::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.name)
}
inline void Base::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.name)
}
inline void Base::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.name)
}
inline ::std::string* Base::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.name)
  return name_;
}
inline ::std::string* Base::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.name)
}

// required bytes fig = 14;
inline bool Base::has_fig() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Base::set_has_fig() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Base::clear_has_fig() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Base::clear_fig() {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_->clear();
  }
  clear_has_fig();
}
inline const ::std::string& Base::fig() const {
  // @@protoc_insertion_point(field_get:User.Base.fig)
  return *fig_;
}
inline void Base::set_fig(const ::std::string& value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.fig)
}
inline void Base::set_fig(const char* value) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.fig)
}
inline void Base::set_fig(const void* value, size_t size) {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  fig_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.fig)
}
inline ::std::string* Base::mutable_fig() {
  set_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fig_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.fig)
  return fig_;
}
inline ::std::string* Base::release_fig() {
  clear_has_fig();
  if (fig_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fig_;
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_fig(::std::string* fig) {
  if (fig_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fig_;
  }
  if (fig) {
    set_has_fig();
    fig_ = fig;
  } else {
    clear_has_fig();
    fig_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.fig)
}

// required uint64 exp = 15;
inline bool Base::has_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Base::set_has_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Base::clear_has_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Base::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 Base::exp() const {
  // @@protoc_insertion_point(field_get:User.Base.exp)
  return exp_;
}
inline void Base::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:User.Base.exp)
}

// required uint32 level = 16;
inline bool Base::has_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Base::set_has_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Base::clear_has_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Base::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Base::level() const {
  // @@protoc_insertion_point(field_get:User.Base.level)
  return level_;
}
inline void Base::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:User.Base.level)
}

// required uint32 acccharge = 17;
inline bool Base::has_acccharge() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Base::set_has_acccharge() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Base::clear_has_acccharge() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Base::clear_acccharge() {
  acccharge_ = 0u;
  clear_has_acccharge();
}
inline ::google::protobuf::uint32 Base::acccharge() const {
  // @@protoc_insertion_point(field_get:User.Base.acccharge)
  return acccharge_;
}
inline void Base::set_acccharge(::google::protobuf::uint32 value) {
  set_has_acccharge();
  acccharge_ = value;
  // @@protoc_insertion_point(field_set:User.Base.acccharge)
}

// required uint32 viplevel = 18;
inline bool Base::has_viplevel() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Base::set_has_viplevel() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Base::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Base::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 Base::viplevel() const {
  // @@protoc_insertion_point(field_get:User.Base.viplevel)
  return viplevel_;
}
inline void Base::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:User.Base.viplevel)
}

// required uint32 cash = 19;
inline bool Base::has_cash() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Base::set_has_cash() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Base::clear_has_cash() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Base::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 Base::cash() const {
  // @@protoc_insertion_point(field_get:User.Base.cash)
  return cash_;
}
inline void Base::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.Base.cash)
}

// required uint32 coin = 20;
inline bool Base::has_coin() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Base::set_has_coin() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Base::clear_has_coin() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Base::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Base::coin() const {
  // @@protoc_insertion_point(field_get:User.Base.coin)
  return coin_;
}
inline void Base::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:User.Base.coin)
}

// required uint32 firstRecharge = 21;
inline bool Base::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Base::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Base::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Base::clear_firstrecharge() {
  firstrecharge_ = 0u;
  clear_has_firstrecharge();
}
inline ::google::protobuf::uint32 Base::firstrecharge() const {
  // @@protoc_insertion_point(field_get:User.Base.firstRecharge)
  return firstrecharge_;
}
inline void Base::set_firstrecharge(::google::protobuf::uint32 value) {
  set_has_firstrecharge();
  firstrecharge_ = value;
  // @@protoc_insertion_point(field_set:User.Base.firstRecharge)
}

// required uint32 allianceId = 22;
inline bool Base::has_allianceid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Base::set_has_allianceid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Base::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Base::clear_allianceid() {
  allianceid_ = 0u;
  clear_has_allianceid();
}
inline ::google::protobuf::uint32 Base::allianceid() const {
  // @@protoc_insertion_point(field_get:User.Base.allianceId)
  return allianceid_;
}
inline void Base::set_allianceid(::google::protobuf::uint32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:User.Base.allianceId)
}

// required bytes barrier = 23;
inline bool Base::has_barrier() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Base::set_has_barrier() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Base::clear_has_barrier() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Base::clear_barrier() {
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_->clear();
  }
  clear_has_barrier();
}
inline const ::std::string& Base::barrier() const {
  // @@protoc_insertion_point(field_get:User.Base.barrier)
  return *barrier_;
}
inline void Base::set_barrier(const ::std::string& value) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(value);
  // @@protoc_insertion_point(field_set:User.Base.barrier)
}
inline void Base::set_barrier(const char* value) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.Base.barrier)
}
inline void Base::set_barrier(const void* value, size_t size) {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  barrier_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.Base.barrier)
}
inline ::std::string* Base::mutable_barrier() {
  set_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    barrier_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.Base.barrier)
  return barrier_;
}
inline ::std::string* Base::release_barrier() {
  clear_has_barrier();
  if (barrier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = barrier_;
    barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Base::set_allocated_barrier(::std::string* barrier) {
  if (barrier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete barrier_;
  }
  if (barrier) {
    set_has_barrier();
    barrier_ = barrier;
  } else {
    clear_has_barrier();
    barrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.Base.barrier)
}

// -------------------------------------------------------------------

// ActivityItem

// required uint32 id = 1;
inline bool ActivityItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityItem::id() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.id)
  return id_;
}
inline void ActivityItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.id)
}

// required uint32 bts = 2;
inline bool ActivityItem::has_bts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityItem::set_has_bts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityItem::clear_has_bts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityItem::clear_bts() {
  bts_ = 0u;
  clear_has_bts();
}
inline ::google::protobuf::uint32 ActivityItem::bts() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.bts)
  return bts_;
}
inline void ActivityItem::set_bts(::google::protobuf::uint32 value) {
  set_has_bts();
  bts_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.bts)
}

// required uint32 ets = 3;
inline bool ActivityItem::has_ets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityItem::set_has_ets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityItem::clear_has_ets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityItem::clear_ets() {
  ets_ = 0u;
  clear_has_ets();
}
inline ::google::protobuf::uint32 ActivityItem::ets() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.ets)
  return ets_;
}
inline void ActivityItem::set_ets(::google::protobuf::uint32 value) {
  set_has_ets();
  ets_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.ets)
}

// required uint32 ver = 4;
inline bool ActivityItem::has_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityItem::set_has_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityItem::clear_has_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityItem::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 ActivityItem::ver() const {
  // @@protoc_insertion_point(field_get:User.ActivityItem.ver)
  return ver_;
}
inline void ActivityItem::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:User.ActivityItem.ver)
}

// -------------------------------------------------------------------

// Activity

// repeated .User.ActivityItem act = 1;
inline int Activity::act_size() const {
  return act_.size();
}
inline void Activity::clear_act() {
  act_.Clear();
}
inline const ::User::ActivityItem& Activity::act(int index) const {
  // @@protoc_insertion_point(field_get:User.Activity.act)
  return act_.Get(index);
}
inline ::User::ActivityItem* Activity::mutable_act(int index) {
  // @@protoc_insertion_point(field_mutable:User.Activity.act)
  return act_.Mutable(index);
}
inline ::User::ActivityItem* Activity::add_act() {
  // @@protoc_insertion_point(field_add:User.Activity.act)
  return act_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >&
Activity::act() const {
  // @@protoc_insertion_point(field_list:User.Activity.act)
  return act_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ActivityItem >*
Activity::mutable_act() {
  // @@protoc_insertion_point(field_mutable_list:User.Activity.act)
  return &act_;
}

// -------------------------------------------------------------------

// User

// required .User.Base base = 1;
inline bool User::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& User::base() const {
  // @@protoc_insertion_point(field_get:User.User.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* User::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  // @@protoc_insertion_point(field_mutable:User.User.base)
  return base_;
}
inline ::User::Base* User::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void User::set_allocated_base(::User::Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.base)
}

// required uint32 ts = 2;
inline bool User::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 User::ts() const {
  // @@protoc_insertion_point(field_get:User.User.ts)
  return ts_;
}
inline void User::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.User.ts)
}

// required .User.Activity activity = 3;
inline bool User::has_activity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User::set_has_activity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User::clear_has_activity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User::clear_activity() {
  if (activity_ != NULL) activity_->::User::Activity::Clear();
  clear_has_activity();
}
inline const ::User::Activity& User::activity() const {
  // @@protoc_insertion_point(field_get:User.User.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::User::Activity* User::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::User::Activity;
  // @@protoc_insertion_point(field_mutable:User.User.activity)
  return activity_;
}
inline ::User::Activity* User::release_activity() {
  clear_has_activity();
  ::User::Activity* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void User::set_allocated_activity(::User::Activity* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.activity)
}

// optional .ProtoNotify.NotifyItemCPPAll notifies = 4;
inline bool User::has_notifies() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_notifies() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_notifies() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_notifies() {
  if (notifies_ != NULL) notifies_->::ProtoNotify::NotifyItemCPPAll::Clear();
  clear_has_notifies();
}
inline const ::ProtoNotify::NotifyItemCPPAll& User::notifies() const {
  // @@protoc_insertion_point(field_get:User.User.notifies)
  return notifies_ != NULL ? *notifies_ : *default_instance_->notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::mutable_notifies() {
  set_has_notifies();
  if (notifies_ == NULL) notifies_ = new ::ProtoNotify::NotifyItemCPPAll;
  // @@protoc_insertion_point(field_mutable:User.User.notifies)
  return notifies_;
}
inline ::ProtoNotify::NotifyItemCPPAll* User::release_notifies() {
  clear_has_notifies();
  ::ProtoNotify::NotifyItemCPPAll* temp = notifies_;
  notifies_ = NULL;
  return temp;
}
inline void User::set_allocated_notifies(::ProtoNotify::NotifyItemCPPAll* notifies) {
  delete notifies_;
  notifies_ = notifies;
  if (notifies) {
    set_has_notifies();
  } else {
    clear_has_notifies();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.notifies)
}

// required .User.AccumulateCharge charges = 5;
inline bool User::has_charges() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void User::set_has_charges() {
  _has_bits_[0] |= 0x00000010u;
}
inline void User::clear_has_charges() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void User::clear_charges() {
  if (charges_ != NULL) charges_->::User::AccumulateCharge::Clear();
  clear_has_charges();
}
inline const ::User::AccumulateCharge& User::charges() const {
  // @@protoc_insertion_point(field_get:User.User.charges)
  return charges_ != NULL ? *charges_ : *default_instance_->charges_;
}
inline ::User::AccumulateCharge* User::mutable_charges() {
  set_has_charges();
  if (charges_ == NULL) charges_ = new ::User::AccumulateCharge;
  // @@protoc_insertion_point(field_mutable:User.User.charges)
  return charges_;
}
inline ::User::AccumulateCharge* User::release_charges() {
  clear_has_charges();
  ::User::AccumulateCharge* temp = charges_;
  charges_ = NULL;
  return temp;
}
inline void User::set_allocated_charges(::User::AccumulateCharge* charges) {
  delete charges_;
  charges_ = charges;
  if (charges) {
    set_has_charges();
  } else {
    clear_has_charges();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.charges)
}

// required .ProtoActivity.GameAcitivityAllCPP gameactivity = 6;
inline bool User::has_gameactivity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_gameactivity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_gameactivity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_gameactivity() {
  if (gameactivity_ != NULL) gameactivity_->::ProtoActivity::GameAcitivityAllCPP::Clear();
  clear_has_gameactivity();
}
inline const ::ProtoActivity::GameAcitivityAllCPP& User::gameactivity() const {
  // @@protoc_insertion_point(field_get:User.User.gameactivity)
  return gameactivity_ != NULL ? *gameactivity_ : *default_instance_->gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::mutable_gameactivity() {
  set_has_gameactivity();
  if (gameactivity_ == NULL) gameactivity_ = new ::ProtoActivity::GameAcitivityAllCPP;
  // @@protoc_insertion_point(field_mutable:User.User.gameactivity)
  return gameactivity_;
}
inline ::ProtoActivity::GameAcitivityAllCPP* User::release_gameactivity() {
  clear_has_gameactivity();
  ::ProtoActivity::GameAcitivityAllCPP* temp = gameactivity_;
  gameactivity_ = NULL;
  return temp;
}
inline void User::set_allocated_gameactivity(::ProtoActivity::GameAcitivityAllCPP* gameactivity) {
  delete gameactivity_;
  gameactivity_ = gameactivity;
  if (gameactivity) {
    set_has_gameactivity();
  } else {
    clear_has_gameactivity();
  }
  // @@protoc_insertion_point(field_set_allocated:User.User.gameactivity)
}

// repeated .DataCommon.PropsItemCPP item = 7;
inline int User::item_size() const {
  return item_.size();
}
inline void User::clear_item() {
  item_.Clear();
}
inline const ::DataCommon::PropsItemCPP& User::item(int index) const {
  // @@protoc_insertion_point(field_get:User.User.item)
  return item_.Get(index);
}
inline ::DataCommon::PropsItemCPP* User::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.item)
  return item_.Mutable(index);
}
inline ::DataCommon::PropsItemCPP* User::add_item() {
  // @@protoc_insertion_point(field_add:User.User.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >&
User::item() const {
  // @@protoc_insertion_point(field_list:User.User.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataCommon::PropsItemCPP >*
User::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:User.User.item)
  return &item_;
}

// repeated .ProtoBuilding.BuildingCPP builds = 8;
inline int User::builds_size() const {
  return builds_.size();
}
inline void User::clear_builds() {
  builds_.Clear();
}
inline const ::ProtoBuilding::BuildingCPP& User::builds(int index) const {
  // @@protoc_insertion_point(field_get:User.User.builds)
  return builds_.Get(index);
}
inline ::ProtoBuilding::BuildingCPP* User::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.builds)
  return builds_.Mutable(index);
}
inline ::ProtoBuilding::BuildingCPP* User::add_builds() {
  // @@protoc_insertion_point(field_add:User.User.builds)
  return builds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >&
User::builds() const {
  // @@protoc_insertion_point(field_list:User.User.builds)
  return builds_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::BuildingCPP >*
User::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:User.User.builds)
  return &builds_;
}

// repeated .ProtoProduce.CropLandCPP cropland = 9;
inline int User::cropland_size() const {
  return cropland_.size();
}
inline void User::clear_cropland() {
  cropland_.Clear();
}
inline const ::ProtoProduce::CropLandCPP& User::cropland(int index) const {
  // @@protoc_insertion_point(field_get:User.User.cropland)
  return cropland_.Get(index);
}
inline ::ProtoProduce::CropLandCPP* User::mutable_cropland(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.cropland)
  return cropland_.Mutable(index);
}
inline ::ProtoProduce::CropLandCPP* User::add_cropland() {
  // @@protoc_insertion_point(field_add:User.User.cropland)
  return cropland_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >&
User::cropland() const {
  // @@protoc_insertion_point(field_list:User.User.cropland)
  return cropland_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::CropLandCPP >*
User::mutable_cropland() {
  // @@protoc_insertion_point(field_mutable_list:User.User.cropland)
  return &cropland_;
}

// repeated .ProtoProduce.ProduceEquipCPP equipments = 10;
inline int User::equipments_size() const {
  return equipments_.size();
}
inline void User::clear_equipments() {
  equipments_.Clear();
}
inline const ::ProtoProduce::ProduceEquipCPP& User::equipments(int index) const {
  // @@protoc_insertion_point(field_get:User.User.equipments)
  return equipments_.Get(index);
}
inline ::ProtoProduce::ProduceEquipCPP* User::mutable_equipments(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.equipments)
  return equipments_.Mutable(index);
}
inline ::ProtoProduce::ProduceEquipCPP* User::add_equipments() {
  // @@protoc_insertion_point(field_add:User.User.equipments)
  return equipments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >&
User::equipments() const {
  // @@protoc_insertion_point(field_list:User.User.equipments)
  return equipments_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::ProduceEquipCPP >*
User::mutable_equipments() {
  // @@protoc_insertion_point(field_mutable_list:User.User.equipments)
  return &equipments_;
}

// repeated .ProtoProduce.AnimalCPP animals = 11;
inline int User::animals_size() const {
  return animals_.size();
}
inline void User::clear_animals() {
  animals_.Clear();
}
inline const ::ProtoProduce::AnimalCPP& User::animals(int index) const {
  // @@protoc_insertion_point(field_get:User.User.animals)
  return animals_.Get(index);
}
inline ::ProtoProduce::AnimalCPP* User::mutable_animals(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.animals)
  return animals_.Mutable(index);
}
inline ::ProtoProduce::AnimalCPP* User::add_animals() {
  // @@protoc_insertion_point(field_add:User.User.animals)
  return animals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >&
User::animals() const {
  // @@protoc_insertion_point(field_list:User.User.animals)
  return animals_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoProduce::AnimalCPP >*
User::mutable_animals() {
  // @@protoc_insertion_point(field_mutable_list:User.User.animals)
  return &animals_;
}

// repeated .ProtoBuilding.EquipmentStarCPP equipmentstars = 12;
inline int User::equipmentstars_size() const {
  return equipmentstars_.size();
}
inline void User::clear_equipmentstars() {
  equipmentstars_.Clear();
}
inline const ::ProtoBuilding::EquipmentStarCPP& User::equipmentstars(int index) const {
  // @@protoc_insertion_point(field_get:User.User.equipmentstars)
  return equipmentstars_.Get(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* User::mutable_equipmentstars(int index) {
  // @@protoc_insertion_point(field_mutable:User.User.equipmentstars)
  return equipmentstars_.Mutable(index);
}
inline ::ProtoBuilding::EquipmentStarCPP* User::add_equipmentstars() {
  // @@protoc_insertion_point(field_add:User.User.equipmentstars)
  return equipmentstars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >&
User::equipmentstars() const {
  // @@protoc_insertion_point(field_list:User.User.equipmentstars)
  return equipmentstars_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuilding::EquipmentStarCPP >*
User::mutable_equipmentstars() {
  // @@protoc_insertion_point(field_mutable_list:User.User.equipmentstars)
  return &equipmentstars_;
}

// -------------------------------------------------------------------

// RequestOtherUser

// required uint32 uid = 1;
inline bool RequestOtherUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOtherUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOtherUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOtherUser::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RequestOtherUser::uid() const {
  // @@protoc_insertion_point(field_get:User.RequestOtherUser.uid)
  return uid_;
}
inline void RequestOtherUser::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:User.RequestOtherUser.uid)
}

// -------------------------------------------------------------------

// OtherUser

// required .User.Base base = 1;
inline bool OtherUser::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherUser::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherUser::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherUser::clear_base() {
  if (base_ != NULL) base_->::User::Base::Clear();
  clear_has_base();
}
inline const ::User::Base& OtherUser::base() const {
  // @@protoc_insertion_point(field_get:User.OtherUser.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::User::Base* OtherUser::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::User::Base;
  // @@protoc_insertion_point(field_mutable:User.OtherUser.base)
  return base_;
}
inline ::User::Base* OtherUser::release_base() {
  clear_has_base();
  ::User::Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void OtherUser::set_allocated_base(::User::Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:User.OtherUser.base)
}

// -------------------------------------------------------------------

// Tutorial_stage

// required uint32 tutorialStage = 1;
inline bool Tutorial_stage::has_tutorialstage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tutorial_stage::set_has_tutorialstage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tutorial_stage::clear_has_tutorialstage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tutorial_stage::clear_tutorialstage() {
  tutorialstage_ = 0u;
  clear_has_tutorialstage();
}
inline ::google::protobuf::uint32 Tutorial_stage::tutorialstage() const {
  // @@protoc_insertion_point(field_get:User.Tutorial_stage.tutorialStage)
  return tutorialstage_;
}
inline void Tutorial_stage::set_tutorialstage(::google::protobuf::uint32 value) {
  set_has_tutorialstage();
  tutorialstage_ = value;
  // @@protoc_insertion_point(field_set:User.Tutorial_stage.tutorialStage)
}

// -------------------------------------------------------------------

// ServerTime

// required uint32 ts = 1;
inline bool ServerTime::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTime::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTime::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTime::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ServerTime::ts() const {
  // @@protoc_insertion_point(field_get:User.ServerTime.ts)
  return ts_;
}
inline void ServerTime::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ServerTime.ts)
}

// -------------------------------------------------------------------

// CostCashReq

// required uint32 cash = 1;
inline bool CostCashReq::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashReq::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashReq::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashReq::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashReq::cash() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.cash)
  return cash_;
}
inline void CostCashReq::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashReq.cash)
}

// required string opCode = 2;
inline bool CostCashReq::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashReq::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashReq::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashReq::clear_opcode() {
  if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_->clear();
  }
  clear_has_opcode();
}
inline const ::std::string& CostCashReq::opcode() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.opCode)
  return *opcode_;
}
inline void CostCashReq::set_opcode(const ::std::string& value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
  // @@protoc_insertion_point(field_set:User.CostCashReq.opCode)
}
inline void CostCashReq::set_opcode(const char* value) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:User.CostCashReq.opCode)
}
inline void CostCashReq::set_opcode(const char* value, size_t size) {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  opcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User.CostCashReq.opCode)
}
inline ::std::string* CostCashReq::mutable_opcode() {
  set_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User.CostCashReq.opCode)
  return opcode_;
}
inline ::std::string* CostCashReq::release_opcode() {
  clear_has_opcode();
  if (opcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = opcode_;
    opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CostCashReq::set_allocated_opcode(::std::string* opcode) {
  if (opcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete opcode_;
  }
  if (opcode) {
    set_has_opcode();
    opcode_ = opcode;
  } else {
    clear_has_opcode();
    opcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User.CostCashReq.opCode)
}

// required uint32 operation = 3;
inline bool CostCashReq::has_operation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CostCashReq::set_has_operation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CostCashReq::clear_has_operation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CostCashReq::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashReq::operation() const {
  // @@protoc_insertion_point(field_get:User.CostCashReq.operation)
  return operation_;
}
inline void CostCashReq::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashReq.operation)
}

// -------------------------------------------------------------------

// CostCashResp

// required uint32 cash = 1;
inline bool CostCashResp::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CostCashResp::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CostCashResp::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CostCashResp::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 CostCashResp::cash() const {
  // @@protoc_insertion_point(field_get:User.CostCashResp.cash)
  return cash_;
}
inline void CostCashResp::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashResp.cash)
}

// required uint32 operation = 2;
inline bool CostCashResp::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CostCashResp::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CostCashResp::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CostCashResp::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 CostCashResp::operation() const {
  // @@protoc_insertion_point(field_get:User.CostCashResp.operation)
  return operation_;
}
inline void CostCashResp::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:User.CostCashResp.operation)
}

// -------------------------------------------------------------------

// ChargeItem

// required uint32 cash = 1;
inline bool ChargeItem::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeItem::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeItem::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeItem::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 ChargeItem::cash() const {
  // @@protoc_insertion_point(field_get:User.ChargeItem.cash)
  return cash_;
}
inline void ChargeItem::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:User.ChargeItem.cash)
}

// required uint32 ts = 2;
inline bool ChargeItem::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeItem::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeItem::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeItem::clear_ts() {
  ts_ = 0u;
  clear_has_ts();
}
inline ::google::protobuf::uint32 ChargeItem::ts() const {
  // @@protoc_insertion_point(field_get:User.ChargeItem.ts)
  return ts_;
}
inline void ChargeItem::set_ts(::google::protobuf::uint32 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:User.ChargeItem.ts)
}

// -------------------------------------------------------------------

// AccumulateCharge

// repeated .User.ChargeItem accumulateCharge = 1;
inline int AccumulateCharge::accumulatecharge_size() const {
  return accumulatecharge_.size();
}
inline void AccumulateCharge::clear_accumulatecharge() {
  accumulatecharge_.Clear();
}
inline const ::User::ChargeItem& AccumulateCharge::accumulatecharge(int index) const {
  // @@protoc_insertion_point(field_get:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Get(index);
}
inline ::User::ChargeItem* AccumulateCharge::mutable_accumulatecharge(int index) {
  // @@protoc_insertion_point(field_mutable:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Mutable(index);
}
inline ::User::ChargeItem* AccumulateCharge::add_accumulatecharge() {
  // @@protoc_insertion_point(field_add:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >&
AccumulateCharge::accumulatecharge() const {
  // @@protoc_insertion_point(field_list:User.AccumulateCharge.accumulateCharge)
  return accumulatecharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::ChargeItem >*
AccumulateCharge::mutable_accumulatecharge() {
  // @@protoc_insertion_point(field_mutable_list:User.AccumulateCharge.accumulateCharge)
  return &accumulatecharge_;
}

// -------------------------------------------------------------------

// PushAccumulateChangeReq

// required .User.AccumulateCharge changeAcccharge = 1;
inline bool PushAccumulateChangeReq::has_changeacccharge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushAccumulateChangeReq::set_has_changeacccharge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushAccumulateChangeReq::clear_has_changeacccharge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushAccumulateChangeReq::clear_changeacccharge() {
  if (changeacccharge_ != NULL) changeacccharge_->::User::AccumulateCharge::Clear();
  clear_has_changeacccharge();
}
inline const ::User::AccumulateCharge& PushAccumulateChangeReq::changeacccharge() const {
  // @@protoc_insertion_point(field_get:User.PushAccumulateChangeReq.changeAcccharge)
  return changeacccharge_ != NULL ? *changeacccharge_ : *default_instance_->changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::mutable_changeacccharge() {
  set_has_changeacccharge();
  if (changeacccharge_ == NULL) changeacccharge_ = new ::User::AccumulateCharge;
  // @@protoc_insertion_point(field_mutable:User.PushAccumulateChangeReq.changeAcccharge)
  return changeacccharge_;
}
inline ::User::AccumulateCharge* PushAccumulateChangeReq::release_changeacccharge() {
  clear_has_changeacccharge();
  ::User::AccumulateCharge* temp = changeacccharge_;
  changeacccharge_ = NULL;
  return temp;
}
inline void PushAccumulateChangeReq::set_allocated_changeacccharge(::User::AccumulateCharge* changeacccharge) {
  delete changeacccharge_;
  changeacccharge_ = changeacccharge;
  if (changeacccharge) {
    set_has_changeacccharge();
  } else {
    clear_has_changeacccharge();
  }
  // @@protoc_insertion_point(field_set_allocated:User.PushAccumulateChangeReq.changeAcccharge)
}

// -------------------------------------------------------------------

// SpeedUpReq

// required uint32 ud = 1;
inline bool SpeedUpReq::has_ud() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpReq::set_has_ud() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpReq::clear_has_ud() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpReq::clear_ud() {
  ud_ = 0u;
  clear_has_ud();
}
inline ::google::protobuf::uint32 SpeedUpReq::ud() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpReq.ud)
  return ud_;
}
inline void SpeedUpReq::set_ud(::google::protobuf::uint32 value) {
  set_has_ud();
  ud_ = value;
  // @@protoc_insertion_point(field_set:User.SpeedUpReq.ud)
}

// -------------------------------------------------------------------

// SpeedUpResp

// optional .DataCommon.CommonItemsCPP commons = 1;
inline bool SpeedUpResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedUpResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpeedUpResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpeedUpResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& SpeedUpResp::commons() const {
  // @@protoc_insertion_point(field_get:User.SpeedUpResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.SpeedUpResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* SpeedUpResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void SpeedUpResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.SpeedUpResp.commons)
}

// -------------------------------------------------------------------

// BuyMaterialInfo

// required uint32 props_id = 1;
inline bool BuyMaterialInfo::has_props_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialInfo::set_has_props_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialInfo::clear_has_props_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialInfo::clear_props_id() {
  props_id_ = 0u;
  clear_has_props_id();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::props_id() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialInfo.props_id)
  return props_id_;
}
inline void BuyMaterialInfo::set_props_id(::google::protobuf::uint32 value) {
  set_has_props_id();
  props_id_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialInfo.props_id)
}

// required uint32 props_cnt = 2;
inline bool BuyMaterialInfo::has_props_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyMaterialInfo::set_has_props_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyMaterialInfo::clear_has_props_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyMaterialInfo::clear_props_cnt() {
  props_cnt_ = 0u;
  clear_has_props_cnt();
}
inline ::google::protobuf::uint32 BuyMaterialInfo::props_cnt() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialInfo.props_cnt)
  return props_cnt_;
}
inline void BuyMaterialInfo::set_props_cnt(::google::protobuf::uint32 value) {
  set_has_props_cnt();
  props_cnt_ = value;
  // @@protoc_insertion_point(field_set:User.BuyMaterialInfo.props_cnt)
}

// -------------------------------------------------------------------

// BuyMaterialReq

// repeated .User.BuyMaterialInfo buy_info = 1;
inline int BuyMaterialReq::buy_info_size() const {
  return buy_info_.size();
}
inline void BuyMaterialReq::clear_buy_info() {
  buy_info_.Clear();
}
inline const ::User::BuyMaterialInfo& BuyMaterialReq::buy_info(int index) const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialReq.buy_info)
  return buy_info_.Get(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::mutable_buy_info(int index) {
  // @@protoc_insertion_point(field_mutable:User.BuyMaterialReq.buy_info)
  return buy_info_.Mutable(index);
}
inline ::User::BuyMaterialInfo* BuyMaterialReq::add_buy_info() {
  // @@protoc_insertion_point(field_add:User.BuyMaterialReq.buy_info)
  return buy_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >&
BuyMaterialReq::buy_info() const {
  // @@protoc_insertion_point(field_list:User.BuyMaterialReq.buy_info)
  return buy_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::User::BuyMaterialInfo >*
BuyMaterialReq::mutable_buy_info() {
  // @@protoc_insertion_point(field_mutable_list:User.BuyMaterialReq.buy_info)
  return &buy_info_;
}

// -------------------------------------------------------------------

// BuyMaterialResp

// required .DataCommon.CommonItemsCPP commons = 1;
inline bool BuyMaterialResp::has_commons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyMaterialResp::set_has_commons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyMaterialResp::clear_has_commons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyMaterialResp::clear_commons() {
  if (commons_ != NULL) commons_->::DataCommon::CommonItemsCPP::Clear();
  clear_has_commons();
}
inline const ::DataCommon::CommonItemsCPP& BuyMaterialResp::commons() const {
  // @@protoc_insertion_point(field_get:User.BuyMaterialResp.commons)
  return commons_ != NULL ? *commons_ : *default_instance_->commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::mutable_commons() {
  set_has_commons();
  if (commons_ == NULL) commons_ = new ::DataCommon::CommonItemsCPP;
  // @@protoc_insertion_point(field_mutable:User.BuyMaterialResp.commons)
  return commons_;
}
inline ::DataCommon::CommonItemsCPP* BuyMaterialResp::release_commons() {
  clear_has_commons();
  ::DataCommon::CommonItemsCPP* temp = commons_;
  commons_ = NULL;
  return temp;
}
inline void BuyMaterialResp::set_allocated_commons(::DataCommon::CommonItemsCPP* commons) {
  delete commons_;
  commons_ = commons;
  if (commons) {
    set_has_commons();
  } else {
    clear_has_commons();
  }
  // @@protoc_insertion_point(field_set_allocated:User.BuyMaterialResp.commons)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace User

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_User_2eproto__INCLUDED
